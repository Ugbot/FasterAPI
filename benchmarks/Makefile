# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 4.1

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /opt/homebrew/bin/cmake

# The command to remove a file.
RM = /opt/homebrew/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /Users/bengamble/FasterAPI

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /Users/bengamble/FasterAPI/benchmarks

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake cache editor..."
	/opt/homebrew/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake to regenerate build system..."
	/opt/homebrew/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Available install components are: \"Unspecified\" \"simdjson_Development\" \"simdjson_Runtime\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	/opt/homebrew/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	/opt/homebrew/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	/opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	/opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	/opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	/opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /Users/bengamble/FasterAPI/benchmarks/CMakeFiles /Users/bengamble/FasterAPI/benchmarks//CMakeFiles/progress.marks
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /Users/bengamble/FasterAPI/benchmarks/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named fasterapi_pg

# Build rule for target.
fasterapi_pg: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 fasterapi_pg
.PHONY : fasterapi_pg

# fast build rule for target.
fasterapi_pg/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/build
.PHONY : fasterapi_pg/fast

#=============================================================================
# Target rules for targets named fasterapi_http

# Build rule for target.
fasterapi_http: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 fasterapi_http
.PHONY : fasterapi_http

# fast build rule for target.
fasterapi_http/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/build
.PHONY : fasterapi_http/fast

#=============================================================================
# Target rules for targets named test_event_loop_echo

# Build rule for target.
test_event_loop_echo: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_event_loop_echo
.PHONY : test_event_loop_echo

# fast build rule for target.
test_event_loop_echo/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_event_loop_echo.dir/build.make CMakeFiles/test_event_loop_echo.dir/build
.PHONY : test_event_loop_echo/fast

#=============================================================================
# Target rules for targets named test_tcp_listener_echo

# Build rule for target.
test_tcp_listener_echo: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_tcp_listener_echo
.PHONY : test_tcp_listener_echo

# fast build rule for target.
test_tcp_listener_echo/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_tcp_listener_echo.dir/build.make CMakeFiles/test_tcp_listener_echo.dir/build
.PHONY : test_tcp_listener_echo/fast

#=============================================================================
# Target rules for targets named test_http1_native

# Build rule for target.
test_http1_native: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_http1_native
.PHONY : test_http1_native

# fast build rule for target.
test_http1_native/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/build
.PHONY : test_http1_native/fast

#=============================================================================
# Target rules for targets named test_http2_native

# Build rule for target.
test_http2_native: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_http2_native
.PHONY : test_http2_native

# fast build rule for target.
test_http2_native/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http2_native.dir/build.make CMakeFiles/test_http2_native.dir/build
.PHONY : test_http2_native/fast

#=============================================================================
# Target rules for targets named test_router

# Build rule for target.
test_router: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_router
.PHONY : test_router

# fast build rule for target.
test_router/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_router.dir/build.make CMakeFiles/test_router.dir/build
.PHONY : test_router/fast

#=============================================================================
# Target rules for targets named bench_router

# Build rule for target.
bench_router: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_router
.PHONY : bench_router

# fast build rule for target.
bench_router/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_router.dir/build.make CMakeFiles/bench_router.dir/build
.PHONY : bench_router/fast

#=============================================================================
# Target rules for targets named test_executor

# Build rule for target.
test_executor: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_executor
.PHONY : test_executor

# fast build rule for target.
test_executor/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/build
.PHONY : test_executor/fast

#=============================================================================
# Target rules for targets named test_hpack

# Build rule for target.
test_hpack: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_hpack
.PHONY : test_hpack

# fast build rule for target.
test_hpack/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_hpack.dir/build.make CMakeFiles/test_hpack.dir/build
.PHONY : test_hpack/fast

#=============================================================================
# Target rules for targets named bench_hpack

# Build rule for target.
bench_hpack: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_hpack
.PHONY : bench_hpack

# fast build rule for target.
bench_hpack/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_hpack.dir/build.make CMakeFiles/bench_hpack.dir/build
.PHONY : bench_hpack/fast

#=============================================================================
# Target rules for targets named test_http1_parser

# Build rule for target.
test_http1_parser: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_http1_parser
.PHONY : test_http1_parser

# fast build rule for target.
test_http1_parser/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_parser.dir/build.make CMakeFiles/test_http1_parser.dir/build
.PHONY : test_http1_parser/fast

#=============================================================================
# Target rules for targets named bench_http1_parser

# Build rule for target.
bench_http1_parser: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_http1_parser
.PHONY : bench_http1_parser

# fast build rule for target.
bench_http1_parser/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_http1_parser.dir/build.make CMakeFiles/bench_http1_parser.dir/build
.PHONY : bench_http1_parser/fast

#=============================================================================
# Target rules for targets named test_http3_parser

# Build rule for target.
test_http3_parser: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_http3_parser
.PHONY : test_http3_parser

# fast build rule for target.
test_http3_parser/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http3_parser.dir/build.make CMakeFiles/test_http3_parser.dir/build
.PHONY : test_http3_parser/fast

#=============================================================================
# Target rules for targets named test_webrtc

# Build rule for target.
test_webrtc: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_webrtc
.PHONY : test_webrtc

# fast build rule for target.
test_webrtc/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc.dir/build.make CMakeFiles/test_webrtc.dir/build
.PHONY : test_webrtc/fast

#=============================================================================
# Target rules for targets named test_webrtc_media

# Build rule for target.
test_webrtc_media: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_webrtc_media
.PHONY : test_webrtc_media

# fast build rule for target.
test_webrtc_media/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc_media.dir/build.make CMakeFiles/test_webrtc_media.dir/build
.PHONY : test_webrtc_media/fast

#=============================================================================
# Target rules for targets named test_h2_server_push

# Build rule for target.
test_h2_server_push: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_h2_server_push
.PHONY : test_h2_server_push

# fast build rule for target.
test_h2_server_push/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_h2_server_push.dir/build.make CMakeFiles/test_h2_server_push.dir/build
.PHONY : test_h2_server_push/fast

#=============================================================================
# Target rules for targets named test_native_types

# Build rule for target.
test_native_types: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_native_types
.PHONY : test_native_types

# fast build rule for target.
test_native_types/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_native_types.dir/build.make CMakeFiles/test_native_types.dir/build
.PHONY : test_native_types/fast

#=============================================================================
# Target rules for targets named test_lockfree_queue

# Build rule for target.
test_lockfree_queue: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_lockfree_queue
.PHONY : test_lockfree_queue

# fast build rule for target.
test_lockfree_queue/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_lockfree_queue.dir/build.make CMakeFiles/test_lockfree_queue.dir/build
.PHONY : test_lockfree_queue/fast

#=============================================================================
# Target rules for targets named test_pyobject_pool

# Build rule for target.
test_pyobject_pool: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_pyobject_pool
.PHONY : test_pyobject_pool

# fast build rule for target.
test_pyobject_pool/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_pyobject_pool.dir/build.make CMakeFiles/test_pyobject_pool.dir/build
.PHONY : test_pyobject_pool/fast

#=============================================================================
# Target rules for targets named test_zerocopy_response

# Build rule for target.
test_zerocopy_response: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_zerocopy_response
.PHONY : test_zerocopy_response

# fast build rule for target.
test_zerocopy_response/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_zerocopy_response.dir/build.make CMakeFiles/test_zerocopy_response.dir/build
.PHONY : test_zerocopy_response/fast

#=============================================================================
# Target rules for targets named test_cpp_routes

# Build rule for target.
test_cpp_routes: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_cpp_routes
.PHONY : test_cpp_routes

# fast build rule for target.
test_cpp_routes/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/build
.PHONY : test_cpp_routes/fast

#=============================================================================
# Target rules for targets named bench_pure_cpp

# Build rule for target.
bench_pure_cpp: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_pure_cpp
.PHONY : bench_pure_cpp

# fast build rule for target.
bench_pure_cpp/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_pure_cpp.dir/build.make CMakeFiles/bench_pure_cpp.dir/build
.PHONY : bench_pure_cpp/fast

#=============================================================================
# Target rules for targets named bench_techempower_cpp

# Build rule for target.
bench_techempower_cpp: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_techempower_cpp
.PHONY : bench_techempower_cpp

# fast build rule for target.
bench_techempower_cpp/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/build
.PHONY : bench_techempower_cpp/fast

#=============================================================================
# Target rules for targets named bench_techempower_concurrent

# Build rule for target.
bench_techempower_concurrent: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_techempower_concurrent
.PHONY : bench_techempower_concurrent

# fast build rule for target.
bench_techempower_concurrent/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/build
.PHONY : bench_techempower_concurrent/fast

#=============================================================================
# Target rules for targets named 1mrc_cpp_server

# Build rule for target.
1mrc_cpp_server: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 1mrc_cpp_server
.PHONY : 1mrc_cpp_server

# fast build rule for target.
1mrc_cpp_server/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_cpp_server.dir/build.make CMakeFiles/1mrc_cpp_server.dir/build
.PHONY : 1mrc_cpp_server/fast

#=============================================================================
# Target rules for targets named 1mrc_async_server

# Build rule for target.
1mrc_async_server: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 1mrc_async_server
.PHONY : 1mrc_async_server

# fast build rule for target.
1mrc_async_server/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_async_server.dir/build.make CMakeFiles/1mrc_async_server.dir/build
.PHONY : 1mrc_async_server/fast

#=============================================================================
# Target rules for targets named 1mrc_libuv_server

# Build rule for target.
1mrc_libuv_server: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 1mrc_libuv_server
.PHONY : 1mrc_libuv_server

# fast build rule for target.
1mrc_libuv_server/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_libuv_server.dir/build.make CMakeFiles/1mrc_libuv_server.dir/build
.PHONY : 1mrc_libuv_server/fast

#=============================================================================
# Target rules for targets named 1mrc_coroio_server

# Build rule for target.
1mrc_coroio_server: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 1mrc_coroio_server
.PHONY : 1mrc_coroio_server

# fast build rule for target.
1mrc_coroio_server/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/build
.PHONY : 1mrc_coroio_server/fast

#=============================================================================
# Target rules for targets named bench_gil_strategies

# Build rule for target.
bench_gil_strategies: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_gil_strategies
.PHONY : bench_gil_strategies

# fast build rule for target.
bench_gil_strategies/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/build
.PHONY : bench_gil_strategies/fast

#=============================================================================
# Target rules for targets named bench_queue_performance

# Build rule for target.
bench_queue_performance: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_queue_performance
.PHONY : bench_queue_performance

# fast build rule for target.
bench_queue_performance/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_queue_performance.dir/build.make CMakeFiles/bench_queue_performance.dir/build
.PHONY : bench_queue_performance/fast

#=============================================================================
# Target rules for targets named fasterapi_mcp

# Build rule for target.
fasterapi_mcp: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 fasterapi_mcp
.PHONY : fasterapi_mcp

# fast build rule for target.
fasterapi_mcp/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/build
.PHONY : fasterapi_mcp/fast

#=============================================================================
# Target rules for targets named test_mcp_protocol

# Build rule for target.
test_mcp_protocol: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_mcp_protocol
.PHONY : test_mcp_protocol

# fast build rule for target.
test_mcp_protocol/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_mcp_protocol.dir/build.make CMakeFiles/test_mcp_protocol.dir/build
.PHONY : test_mcp_protocol/fast

#=============================================================================
# Target rules for targets named test_mcp_transport

# Build rule for target.
test_mcp_transport: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_mcp_transport
.PHONY : test_mcp_transport

# fast build rule for target.
test_mcp_transport/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_mcp_transport.dir/build.make CMakeFiles/test_mcp_transport.dir/build
.PHONY : test_mcp_transport/fast

#=============================================================================
# Target rules for targets named hello_world

# Build rule for target.
hello_world: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 hello_world
.PHONY : hello_world

# fast build rule for target.
hello_world/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/hello_world.dir/build.make CMakeFiles/hello_world.dir/build
.PHONY : hello_world/fast

#=============================================================================
# Target rules for targets named cpp_app_demo

# Build rule for target.
cpp_app_demo: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 cpp_app_demo
.PHONY : cpp_app_demo

# fast build rule for target.
cpp_app_demo/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/cpp_app_demo.dir/build.make CMakeFiles/cpp_app_demo.dir/build
.PHONY : cpp_app_demo/fast

#=============================================================================
# Target rules for targets named mimalloc

# Build rule for target.
mimalloc: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 mimalloc
.PHONY : mimalloc

# fast build rule for target.
mimalloc/fast:
	$(MAKE) $(MAKESILENT) -f _deps/mimalloc-build/CMakeFiles/mimalloc.dir/build.make _deps/mimalloc-build/CMakeFiles/mimalloc.dir/build
.PHONY : mimalloc/fast

#=============================================================================
# Target rules for targets named mimalloc-static

# Build rule for target.
mimalloc-static: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 mimalloc-static
.PHONY : mimalloc-static

# fast build rule for target.
mimalloc-static/fast:
	$(MAKE) $(MAKESILENT) -f _deps/mimalloc-build/CMakeFiles/mimalloc-static.dir/build.make _deps/mimalloc-build/CMakeFiles/mimalloc-static.dir/build
.PHONY : mimalloc-static/fast

#=============================================================================
# Target rules for targets named mimalloc-obj

# Build rule for target.
mimalloc-obj: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 mimalloc-obj
.PHONY : mimalloc-obj

# fast build rule for target.
mimalloc-obj/fast:
	$(MAKE) $(MAKESILENT) -f _deps/mimalloc-build/CMakeFiles/mimalloc-obj.dir/build.make _deps/mimalloc-build/CMakeFiles/mimalloc-obj.dir/build
.PHONY : mimalloc-obj/fast

#=============================================================================
# Target rules for targets named mimalloc-obj-target

# Build rule for target.
mimalloc-obj-target: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 mimalloc-obj-target
.PHONY : mimalloc-obj-target

# fast build rule for target.
mimalloc-obj-target/fast:
	$(MAKE) $(MAKESILENT) -f _deps/mimalloc-build/CMakeFiles/mimalloc-obj-target.dir/build.make _deps/mimalloc-build/CMakeFiles/mimalloc-obj-target.dir/build
.PHONY : mimalloc-obj-target/fast

#=============================================================================
# Target rules for targets named Experimental

# Build rule for target.
Experimental: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Experimental
.PHONY : Experimental

# fast build rule for target.
Experimental/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/Experimental.dir/build.make _deps/libuv-build/CMakeFiles/Experimental.dir/build
.PHONY : Experimental/fast

#=============================================================================
# Target rules for targets named Nightly

# Build rule for target.
Nightly: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Nightly
.PHONY : Nightly

# fast build rule for target.
Nightly/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/Nightly.dir/build.make _deps/libuv-build/CMakeFiles/Nightly.dir/build
.PHONY : Nightly/fast

#=============================================================================
# Target rules for targets named Continuous

# Build rule for target.
Continuous: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Continuous
.PHONY : Continuous

# fast build rule for target.
Continuous/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/Continuous.dir/build.make _deps/libuv-build/CMakeFiles/Continuous.dir/build
.PHONY : Continuous/fast

#=============================================================================
# Target rules for targets named NightlyMemoryCheck

# Build rule for target.
NightlyMemoryCheck: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlyMemoryCheck
.PHONY : NightlyMemoryCheck

# fast build rule for target.
NightlyMemoryCheck/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/NightlyMemoryCheck.dir/build.make _deps/libuv-build/CMakeFiles/NightlyMemoryCheck.dir/build
.PHONY : NightlyMemoryCheck/fast

#=============================================================================
# Target rules for targets named NightlyStart

# Build rule for target.
NightlyStart: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlyStart
.PHONY : NightlyStart

# fast build rule for target.
NightlyStart/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/NightlyStart.dir/build.make _deps/libuv-build/CMakeFiles/NightlyStart.dir/build
.PHONY : NightlyStart/fast

#=============================================================================
# Target rules for targets named NightlyUpdate

# Build rule for target.
NightlyUpdate: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlyUpdate
.PHONY : NightlyUpdate

# fast build rule for target.
NightlyUpdate/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/NightlyUpdate.dir/build.make _deps/libuv-build/CMakeFiles/NightlyUpdate.dir/build
.PHONY : NightlyUpdate/fast

#=============================================================================
# Target rules for targets named NightlyConfigure

# Build rule for target.
NightlyConfigure: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlyConfigure
.PHONY : NightlyConfigure

# fast build rule for target.
NightlyConfigure/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/NightlyConfigure.dir/build.make _deps/libuv-build/CMakeFiles/NightlyConfigure.dir/build
.PHONY : NightlyConfigure/fast

#=============================================================================
# Target rules for targets named NightlyBuild

# Build rule for target.
NightlyBuild: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlyBuild
.PHONY : NightlyBuild

# fast build rule for target.
NightlyBuild/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/NightlyBuild.dir/build.make _deps/libuv-build/CMakeFiles/NightlyBuild.dir/build
.PHONY : NightlyBuild/fast

#=============================================================================
# Target rules for targets named NightlyTest

# Build rule for target.
NightlyTest: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlyTest
.PHONY : NightlyTest

# fast build rule for target.
NightlyTest/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/NightlyTest.dir/build.make _deps/libuv-build/CMakeFiles/NightlyTest.dir/build
.PHONY : NightlyTest/fast

#=============================================================================
# Target rules for targets named NightlyCoverage

# Build rule for target.
NightlyCoverage: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlyCoverage
.PHONY : NightlyCoverage

# fast build rule for target.
NightlyCoverage/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/NightlyCoverage.dir/build.make _deps/libuv-build/CMakeFiles/NightlyCoverage.dir/build
.PHONY : NightlyCoverage/fast

#=============================================================================
# Target rules for targets named NightlyMemCheck

# Build rule for target.
NightlyMemCheck: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlyMemCheck
.PHONY : NightlyMemCheck

# fast build rule for target.
NightlyMemCheck/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/NightlyMemCheck.dir/build.make _deps/libuv-build/CMakeFiles/NightlyMemCheck.dir/build
.PHONY : NightlyMemCheck/fast

#=============================================================================
# Target rules for targets named NightlySubmit

# Build rule for target.
NightlySubmit: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlySubmit
.PHONY : NightlySubmit

# fast build rule for target.
NightlySubmit/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/NightlySubmit.dir/build.make _deps/libuv-build/CMakeFiles/NightlySubmit.dir/build
.PHONY : NightlySubmit/fast

#=============================================================================
# Target rules for targets named ExperimentalStart

# Build rule for target.
ExperimentalStart: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExperimentalStart
.PHONY : ExperimentalStart

# fast build rule for target.
ExperimentalStart/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/ExperimentalStart.dir/build.make _deps/libuv-build/CMakeFiles/ExperimentalStart.dir/build
.PHONY : ExperimentalStart/fast

#=============================================================================
# Target rules for targets named ExperimentalUpdate

# Build rule for target.
ExperimentalUpdate: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExperimentalUpdate
.PHONY : ExperimentalUpdate

# fast build rule for target.
ExperimentalUpdate/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/ExperimentalUpdate.dir/build.make _deps/libuv-build/CMakeFiles/ExperimentalUpdate.dir/build
.PHONY : ExperimentalUpdate/fast

#=============================================================================
# Target rules for targets named ExperimentalConfigure

# Build rule for target.
ExperimentalConfigure: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExperimentalConfigure
.PHONY : ExperimentalConfigure

# fast build rule for target.
ExperimentalConfigure/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/ExperimentalConfigure.dir/build.make _deps/libuv-build/CMakeFiles/ExperimentalConfigure.dir/build
.PHONY : ExperimentalConfigure/fast

#=============================================================================
# Target rules for targets named ExperimentalBuild

# Build rule for target.
ExperimentalBuild: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExperimentalBuild
.PHONY : ExperimentalBuild

# fast build rule for target.
ExperimentalBuild/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/ExperimentalBuild.dir/build.make _deps/libuv-build/CMakeFiles/ExperimentalBuild.dir/build
.PHONY : ExperimentalBuild/fast

#=============================================================================
# Target rules for targets named ExperimentalTest

# Build rule for target.
ExperimentalTest: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExperimentalTest
.PHONY : ExperimentalTest

# fast build rule for target.
ExperimentalTest/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/ExperimentalTest.dir/build.make _deps/libuv-build/CMakeFiles/ExperimentalTest.dir/build
.PHONY : ExperimentalTest/fast

#=============================================================================
# Target rules for targets named ExperimentalCoverage

# Build rule for target.
ExperimentalCoverage: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExperimentalCoverage
.PHONY : ExperimentalCoverage

# fast build rule for target.
ExperimentalCoverage/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/ExperimentalCoverage.dir/build.make _deps/libuv-build/CMakeFiles/ExperimentalCoverage.dir/build
.PHONY : ExperimentalCoverage/fast

#=============================================================================
# Target rules for targets named ExperimentalMemCheck

# Build rule for target.
ExperimentalMemCheck: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExperimentalMemCheck
.PHONY : ExperimentalMemCheck

# fast build rule for target.
ExperimentalMemCheck/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/ExperimentalMemCheck.dir/build.make _deps/libuv-build/CMakeFiles/ExperimentalMemCheck.dir/build
.PHONY : ExperimentalMemCheck/fast

#=============================================================================
# Target rules for targets named ExperimentalSubmit

# Build rule for target.
ExperimentalSubmit: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExperimentalSubmit
.PHONY : ExperimentalSubmit

# fast build rule for target.
ExperimentalSubmit/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/ExperimentalSubmit.dir/build.make _deps/libuv-build/CMakeFiles/ExperimentalSubmit.dir/build
.PHONY : ExperimentalSubmit/fast

#=============================================================================
# Target rules for targets named ContinuousStart

# Build rule for target.
ContinuousStart: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ContinuousStart
.PHONY : ContinuousStart

# fast build rule for target.
ContinuousStart/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/ContinuousStart.dir/build.make _deps/libuv-build/CMakeFiles/ContinuousStart.dir/build
.PHONY : ContinuousStart/fast

#=============================================================================
# Target rules for targets named ContinuousUpdate

# Build rule for target.
ContinuousUpdate: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ContinuousUpdate
.PHONY : ContinuousUpdate

# fast build rule for target.
ContinuousUpdate/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/ContinuousUpdate.dir/build.make _deps/libuv-build/CMakeFiles/ContinuousUpdate.dir/build
.PHONY : ContinuousUpdate/fast

#=============================================================================
# Target rules for targets named ContinuousConfigure

# Build rule for target.
ContinuousConfigure: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ContinuousConfigure
.PHONY : ContinuousConfigure

# fast build rule for target.
ContinuousConfigure/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/ContinuousConfigure.dir/build.make _deps/libuv-build/CMakeFiles/ContinuousConfigure.dir/build
.PHONY : ContinuousConfigure/fast

#=============================================================================
# Target rules for targets named ContinuousBuild

# Build rule for target.
ContinuousBuild: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ContinuousBuild
.PHONY : ContinuousBuild

# fast build rule for target.
ContinuousBuild/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/ContinuousBuild.dir/build.make _deps/libuv-build/CMakeFiles/ContinuousBuild.dir/build
.PHONY : ContinuousBuild/fast

#=============================================================================
# Target rules for targets named ContinuousTest

# Build rule for target.
ContinuousTest: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ContinuousTest
.PHONY : ContinuousTest

# fast build rule for target.
ContinuousTest/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/ContinuousTest.dir/build.make _deps/libuv-build/CMakeFiles/ContinuousTest.dir/build
.PHONY : ContinuousTest/fast

#=============================================================================
# Target rules for targets named ContinuousCoverage

# Build rule for target.
ContinuousCoverage: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ContinuousCoverage
.PHONY : ContinuousCoverage

# fast build rule for target.
ContinuousCoverage/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/ContinuousCoverage.dir/build.make _deps/libuv-build/CMakeFiles/ContinuousCoverage.dir/build
.PHONY : ContinuousCoverage/fast

#=============================================================================
# Target rules for targets named ContinuousMemCheck

# Build rule for target.
ContinuousMemCheck: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ContinuousMemCheck
.PHONY : ContinuousMemCheck

# fast build rule for target.
ContinuousMemCheck/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/ContinuousMemCheck.dir/build.make _deps/libuv-build/CMakeFiles/ContinuousMemCheck.dir/build
.PHONY : ContinuousMemCheck/fast

#=============================================================================
# Target rules for targets named ContinuousSubmit

# Build rule for target.
ContinuousSubmit: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ContinuousSubmit
.PHONY : ContinuousSubmit

# fast build rule for target.
ContinuousSubmit/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/ContinuousSubmit.dir/build.make _deps/libuv-build/CMakeFiles/ContinuousSubmit.dir/build
.PHONY : ContinuousSubmit/fast

#=============================================================================
# Target rules for targets named uv

# Build rule for target.
uv: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 uv
.PHONY : uv

# fast build rule for target.
uv/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/uv.dir/build.make _deps/libuv-build/CMakeFiles/uv.dir/build
.PHONY : uv/fast

#=============================================================================
# Target rules for targets named uv_a

# Build rule for target.
uv_a: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 uv_a
.PHONY : uv_a

# fast build rule for target.
uv_a/fast:
	$(MAKE) $(MAKESILENT) -f _deps/libuv-build/CMakeFiles/uv_a.dir/build.make _deps/libuv-build/CMakeFiles/uv_a.dir/build
.PHONY : uv_a/fast

#=============================================================================
# Target rules for targets named simdjson

# Build rule for target.
simdjson: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 simdjson
.PHONY : simdjson

# fast build rule for target.
simdjson/fast:
	$(MAKE) $(MAKESILENT) -f _deps/simdjson-build/CMakeFiles/simdjson.dir/build.make _deps/simdjson-build/CMakeFiles/simdjson.dir/build
.PHONY : simdjson/fast

#=============================================================================
# Target rules for targets named check

# Build rule for target.
check: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 check
.PHONY : check

# fast build rule for target.
check/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/CMakeFiles/check.dir/build.make _deps/nghttp2-build/CMakeFiles/check.dir/build
.PHONY : check/fast

#=============================================================================
# Target rules for targets named nghttp2

# Build rule for target.
nghttp2: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 nghttp2
.PHONY : nghttp2

# fast build rule for target.
nghttp2/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/lib/CMakeFiles/nghttp2.dir/build.make _deps/nghttp2-build/lib/CMakeFiles/nghttp2.dir/build
.PHONY : nghttp2/fast

#=============================================================================
# Target rules for targets named html

# Build rule for target.
html: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 html
.PHONY : html

# fast build rule for target.
html/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/doc/CMakeFiles/html.dir/build.make _deps/nghttp2-build/doc/CMakeFiles/html.dir/build
.PHONY : html/fast

#=============================================================================
# Target rules for targets named dirhtml

# Build rule for target.
dirhtml: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 dirhtml
.PHONY : dirhtml

# fast build rule for target.
dirhtml/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/doc/CMakeFiles/dirhtml.dir/build.make _deps/nghttp2-build/doc/CMakeFiles/dirhtml.dir/build
.PHONY : dirhtml/fast

#=============================================================================
# Target rules for targets named singlehtml

# Build rule for target.
singlehtml: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 singlehtml
.PHONY : singlehtml

# fast build rule for target.
singlehtml/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/doc/CMakeFiles/singlehtml.dir/build.make _deps/nghttp2-build/doc/CMakeFiles/singlehtml.dir/build
.PHONY : singlehtml/fast

#=============================================================================
# Target rules for targets named pickle

# Build rule for target.
pickle: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 pickle
.PHONY : pickle

# fast build rule for target.
pickle/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/doc/CMakeFiles/pickle.dir/build.make _deps/nghttp2-build/doc/CMakeFiles/pickle.dir/build
.PHONY : pickle/fast

#=============================================================================
# Target rules for targets named json

# Build rule for target.
json: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 json
.PHONY : json

# fast build rule for target.
json/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/doc/CMakeFiles/json.dir/build.make _deps/nghttp2-build/doc/CMakeFiles/json.dir/build
.PHONY : json/fast

#=============================================================================
# Target rules for targets named htmlhelp

# Build rule for target.
htmlhelp: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 htmlhelp
.PHONY : htmlhelp

# fast build rule for target.
htmlhelp/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/doc/CMakeFiles/htmlhelp.dir/build.make _deps/nghttp2-build/doc/CMakeFiles/htmlhelp.dir/build
.PHONY : htmlhelp/fast

#=============================================================================
# Target rules for targets named qthelp

# Build rule for target.
qthelp: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 qthelp
.PHONY : qthelp

# fast build rule for target.
qthelp/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/doc/CMakeFiles/qthelp.dir/build.make _deps/nghttp2-build/doc/CMakeFiles/qthelp.dir/build
.PHONY : qthelp/fast

#=============================================================================
# Target rules for targets named devhelp

# Build rule for target.
devhelp: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 devhelp
.PHONY : devhelp

# fast build rule for target.
devhelp/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/doc/CMakeFiles/devhelp.dir/build.make _deps/nghttp2-build/doc/CMakeFiles/devhelp.dir/build
.PHONY : devhelp/fast

#=============================================================================
# Target rules for targets named epub

# Build rule for target.
epub: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 epub
.PHONY : epub

# fast build rule for target.
epub/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/doc/CMakeFiles/epub.dir/build.make _deps/nghttp2-build/doc/CMakeFiles/epub.dir/build
.PHONY : epub/fast

#=============================================================================
# Target rules for targets named latex

# Build rule for target.
latex: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 latex
.PHONY : latex

# fast build rule for target.
latex/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/doc/CMakeFiles/latex.dir/build.make _deps/nghttp2-build/doc/CMakeFiles/latex.dir/build
.PHONY : latex/fast

#=============================================================================
# Target rules for targets named latexpdf

# Build rule for target.
latexpdf: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 latexpdf
.PHONY : latexpdf

# fast build rule for target.
latexpdf/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/doc/CMakeFiles/latexpdf.dir/build.make _deps/nghttp2-build/doc/CMakeFiles/latexpdf.dir/build
.PHONY : latexpdf/fast

#=============================================================================
# Target rules for targets named text

# Build rule for target.
text: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 text
.PHONY : text

# fast build rule for target.
text/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/doc/CMakeFiles/text.dir/build.make _deps/nghttp2-build/doc/CMakeFiles/text.dir/build
.PHONY : text/fast

#=============================================================================
# Target rules for targets named man

# Build rule for target.
man: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 man
.PHONY : man

# fast build rule for target.
man/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/doc/CMakeFiles/man.dir/build.make _deps/nghttp2-build/doc/CMakeFiles/man.dir/build
.PHONY : man/fast

#=============================================================================
# Target rules for targets named changes

# Build rule for target.
changes: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 changes
.PHONY : changes

# fast build rule for target.
changes/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/doc/CMakeFiles/changes.dir/build.make _deps/nghttp2-build/doc/CMakeFiles/changes.dir/build
.PHONY : changes/fast

#=============================================================================
# Target rules for targets named linkcheck

# Build rule for target.
linkcheck: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 linkcheck
.PHONY : linkcheck

# fast build rule for target.
linkcheck/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/doc/CMakeFiles/linkcheck.dir/build.make _deps/nghttp2-build/doc/CMakeFiles/linkcheck.dir/build
.PHONY : linkcheck/fast

#=============================================================================
# Target rules for targets named doctest

# Build rule for target.
doctest: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 doctest
.PHONY : doctest

# fast build rule for target.
doctest/fast:
	$(MAKE) $(MAKESILENT) -f _deps/nghttp2-build/doc/CMakeFiles/doctest.dir/build.make _deps/nghttp2-build/doc/CMakeFiles/doctest.dir/build
.PHONY : doctest/fast

#=============================================================================
# Target rules for targets named coroio

# Build rule for target.
coroio: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 coroio
.PHONY : coroio

# fast build rule for target.
coroio/fast:
	$(MAKE) $(MAKESILENT) -f external/coroio/coroio/CMakeFiles/coroio.dir/build.make external/coroio/coroio/CMakeFiles/coroio.dir/build
.PHONY : coroio/fast

#=============================================================================
# Target rules for targets named coroio_dns

# Build rule for target.
coroio_dns: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 coroio_dns
.PHONY : coroio_dns

# fast build rule for target.
coroio_dns/fast:
	$(MAKE) $(MAKESILENT) -f external/coroio/coroio/dns/CMakeFiles/coroio_dns.dir/build.make external/coroio/coroio/dns/CMakeFiles/coroio_dns.dir/build
.PHONY : coroio_dns/fast

#=============================================================================
# Target rules for targets named coroio_actors

# Build rule for target.
coroio_actors: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 coroio_actors
.PHONY : coroio_actors

# fast build rule for target.
coroio_actors/fast:
	$(MAKE) $(MAKESILENT) -f external/coroio/coroio/actors/CMakeFiles/coroio_actors.dir/build.make external/coroio/coroio/actors/CMakeFiles/coroio_actors.dir/build
.PHONY : coroio_actors/fast

#=============================================================================
# Target rules for targets named timers

# Build rule for target.
timers: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 timers
.PHONY : timers

# fast build rule for target.
timers/fast:
	$(MAKE) $(MAKESILENT) -f external/coroio/examples/CMakeFiles/timers.dir/build.make external/coroio/examples/CMakeFiles/timers.dir/build
.PHONY : timers/fast

#=============================================================================
# Target rules for targets named echotest

# Build rule for target.
echotest: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 echotest
.PHONY : echotest

# fast build rule for target.
echotest/fast:
	$(MAKE) $(MAKESILENT) -f external/coroio/examples/CMakeFiles/echotest.dir/build.make external/coroio/examples/CMakeFiles/echotest.dir/build
.PHONY : echotest/fast

#=============================================================================
# Target rules for targets named echoserver

# Build rule for target.
echoserver: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 echoserver
.PHONY : echoserver

# fast build rule for target.
echoserver/fast:
	$(MAKE) $(MAKESILENT) -f external/coroio/examples/CMakeFiles/echoserver.dir/build.make external/coroio/examples/CMakeFiles/echoserver.dir/build
.PHONY : echoserver/fast

#=============================================================================
# Target rules for targets named echoclient

# Build rule for target.
echoclient: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 echoclient
.PHONY : echoclient

# fast build rule for target.
echoclient/fast:
	$(MAKE) $(MAKESILENT) -f external/coroio/examples/CMakeFiles/echoclient.dir/build.make external/coroio/examples/CMakeFiles/echoclient.dir/build
.PHONY : echoclient/fast

#=============================================================================
# Target rules for targets named sslechoclient

# Build rule for target.
sslechoclient: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 sslechoclient
.PHONY : sslechoclient

# fast build rule for target.
sslechoclient/fast:
	$(MAKE) $(MAKESILENT) -f external/coroio/examples/CMakeFiles/sslechoclient.dir/build.make external/coroio/examples/CMakeFiles/sslechoclient.dir/build
.PHONY : sslechoclient/fast

#=============================================================================
# Target rules for targets named sslechoserver

# Build rule for target.
sslechoserver: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 sslechoserver
.PHONY : sslechoserver

# fast build rule for target.
sslechoserver/fast:
	$(MAKE) $(MAKESILENT) -f external/coroio/examples/CMakeFiles/sslechoserver.dir/build.make external/coroio/examples/CMakeFiles/sslechoserver.dir/build
.PHONY : sslechoserver/fast

#=============================================================================
# Target rules for targets named resolver

# Build rule for target.
resolver: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 resolver
.PHONY : resolver

# fast build rule for target.
resolver/fast:
	$(MAKE) $(MAKESILENT) -f external/coroio/examples/CMakeFiles/resolver.dir/build.make external/coroio/examples/CMakeFiles/resolver.dir/build
.PHONY : resolver/fast

#=============================================================================
# Target rules for targets named bench

# Build rule for target.
bench: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench
.PHONY : bench

# fast build rule for target.
bench/fast:
	$(MAKE) $(MAKESILENT) -f external/coroio/examples/CMakeFiles/bench.dir/build.make external/coroio/examples/CMakeFiles/bench.dir/build
.PHONY : bench/fast

#=============================================================================
# Target rules for targets named wsclient

# Build rule for target.
wsclient: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 wsclient
.PHONY : wsclient

# fast build rule for target.
wsclient/fast:
	$(MAKE) $(MAKESILENT) -f external/coroio/examples/CMakeFiles/wsclient.dir/build.make external/coroio/examples/CMakeFiles/wsclient.dir/build
.PHONY : wsclient/fast

#=============================================================================
# Target rules for targets named bench_actors

# Build rule for target.
bench_actors: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_actors
.PHONY : bench_actors

# fast build rule for target.
bench_actors/fast:
	$(MAKE) $(MAKESILENT) -f external/coroio/examples/CMakeFiles/bench_actors.dir/build.make external/coroio/examples/CMakeFiles/bench_actors.dir/build
.PHONY : bench_actors/fast

#=============================================================================
# Target rules for targets named ping_actors

# Build rule for target.
ping_actors: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ping_actors
.PHONY : ping_actors

# fast build rule for target.
ping_actors/fast:
	$(MAKE) $(MAKESILENT) -f external/coroio/examples/CMakeFiles/ping_actors.dir/build.make external/coroio/examples/CMakeFiles/ping_actors.dir/build
.PHONY : ping_actors/fast

#=============================================================================
# Target rules for targets named behavior_actors

# Build rule for target.
behavior_actors: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 behavior_actors
.PHONY : behavior_actors

# fast build rule for target.
behavior_actors/fast:
	$(MAKE) $(MAKESILENT) -f external/coroio/examples/CMakeFiles/behavior_actors.dir/build.make external/coroio/examples/CMakeFiles/behavior_actors.dir/build
.PHONY : behavior_actors/fast

1mrc/cpp/1mrc_async_server.o: 1mrc/cpp/1mrc_async_server.cpp.o
.PHONY : 1mrc/cpp/1mrc_async_server.o

# target to build an object file
1mrc/cpp/1mrc_async_server.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_async_server.dir/build.make CMakeFiles/1mrc_async_server.dir/1mrc/cpp/1mrc_async_server.cpp.o
.PHONY : 1mrc/cpp/1mrc_async_server.cpp.o

1mrc/cpp/1mrc_async_server.i: 1mrc/cpp/1mrc_async_server.cpp.i
.PHONY : 1mrc/cpp/1mrc_async_server.i

# target to preprocess a source file
1mrc/cpp/1mrc_async_server.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_async_server.dir/build.make CMakeFiles/1mrc_async_server.dir/1mrc/cpp/1mrc_async_server.cpp.i
.PHONY : 1mrc/cpp/1mrc_async_server.cpp.i

1mrc/cpp/1mrc_async_server.s: 1mrc/cpp/1mrc_async_server.cpp.s
.PHONY : 1mrc/cpp/1mrc_async_server.s

# target to generate assembly for a file
1mrc/cpp/1mrc_async_server.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_async_server.dir/build.make CMakeFiles/1mrc_async_server.dir/1mrc/cpp/1mrc_async_server.cpp.s
.PHONY : 1mrc/cpp/1mrc_async_server.cpp.s

1mrc/cpp/1mrc_coroio_server.o: 1mrc/cpp/1mrc_coroio_server.cpp.o
.PHONY : 1mrc/cpp/1mrc_coroio_server.o

# target to build an object file
1mrc/cpp/1mrc_coroio_server.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/1mrc/cpp/1mrc_coroio_server.cpp.o
.PHONY : 1mrc/cpp/1mrc_coroio_server.cpp.o

1mrc/cpp/1mrc_coroio_server.i: 1mrc/cpp/1mrc_coroio_server.cpp.i
.PHONY : 1mrc/cpp/1mrc_coroio_server.i

# target to preprocess a source file
1mrc/cpp/1mrc_coroio_server.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/1mrc/cpp/1mrc_coroio_server.cpp.i
.PHONY : 1mrc/cpp/1mrc_coroio_server.cpp.i

1mrc/cpp/1mrc_coroio_server.s: 1mrc/cpp/1mrc_coroio_server.cpp.s
.PHONY : 1mrc/cpp/1mrc_coroio_server.s

# target to generate assembly for a file
1mrc/cpp/1mrc_coroio_server.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/1mrc/cpp/1mrc_coroio_server.cpp.s
.PHONY : 1mrc/cpp/1mrc_coroio_server.cpp.s

1mrc/cpp/1mrc_cpp_server.o: 1mrc/cpp/1mrc_cpp_server.cpp.o
.PHONY : 1mrc/cpp/1mrc_cpp_server.o

# target to build an object file
1mrc/cpp/1mrc_cpp_server.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_cpp_server.dir/build.make CMakeFiles/1mrc_cpp_server.dir/1mrc/cpp/1mrc_cpp_server.cpp.o
.PHONY : 1mrc/cpp/1mrc_cpp_server.cpp.o

1mrc/cpp/1mrc_cpp_server.i: 1mrc/cpp/1mrc_cpp_server.cpp.i
.PHONY : 1mrc/cpp/1mrc_cpp_server.i

# target to preprocess a source file
1mrc/cpp/1mrc_cpp_server.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_cpp_server.dir/build.make CMakeFiles/1mrc_cpp_server.dir/1mrc/cpp/1mrc_cpp_server.cpp.i
.PHONY : 1mrc/cpp/1mrc_cpp_server.cpp.i

1mrc/cpp/1mrc_cpp_server.s: 1mrc/cpp/1mrc_cpp_server.cpp.s
.PHONY : 1mrc/cpp/1mrc_cpp_server.s

# target to generate assembly for a file
1mrc/cpp/1mrc_cpp_server.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_cpp_server.dir/build.make CMakeFiles/1mrc_cpp_server.dir/1mrc/cpp/1mrc_cpp_server.cpp.s
.PHONY : 1mrc/cpp/1mrc_cpp_server.cpp.s

1mrc/cpp/1mrc_libuv_server.o: 1mrc/cpp/1mrc_libuv_server.cpp.o
.PHONY : 1mrc/cpp/1mrc_libuv_server.o

# target to build an object file
1mrc/cpp/1mrc_libuv_server.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_libuv_server.dir/build.make CMakeFiles/1mrc_libuv_server.dir/1mrc/cpp/1mrc_libuv_server.cpp.o
.PHONY : 1mrc/cpp/1mrc_libuv_server.cpp.o

1mrc/cpp/1mrc_libuv_server.i: 1mrc/cpp/1mrc_libuv_server.cpp.i
.PHONY : 1mrc/cpp/1mrc_libuv_server.i

# target to preprocess a source file
1mrc/cpp/1mrc_libuv_server.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_libuv_server.dir/build.make CMakeFiles/1mrc_libuv_server.dir/1mrc/cpp/1mrc_libuv_server.cpp.i
.PHONY : 1mrc/cpp/1mrc_libuv_server.cpp.i

1mrc/cpp/1mrc_libuv_server.s: 1mrc/cpp/1mrc_libuv_server.cpp.s
.PHONY : 1mrc/cpp/1mrc_libuv_server.s

# target to generate assembly for a file
1mrc/cpp/1mrc_libuv_server.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_libuv_server.dir/build.make CMakeFiles/1mrc_libuv_server.dir/1mrc/cpp/1mrc_libuv_server.cpp.s
.PHONY : 1mrc/cpp/1mrc_libuv_server.cpp.s

examples/cpp_app_demo.o: examples/cpp_app_demo.cpp.o
.PHONY : examples/cpp_app_demo.o

# target to build an object file
examples/cpp_app_demo.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/cpp_app_demo.dir/build.make CMakeFiles/cpp_app_demo.dir/examples/cpp_app_demo.cpp.o
.PHONY : examples/cpp_app_demo.cpp.o

examples/cpp_app_demo.i: examples/cpp_app_demo.cpp.i
.PHONY : examples/cpp_app_demo.i

# target to preprocess a source file
examples/cpp_app_demo.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/cpp_app_demo.dir/build.make CMakeFiles/cpp_app_demo.dir/examples/cpp_app_demo.cpp.i
.PHONY : examples/cpp_app_demo.cpp.i

examples/cpp_app_demo.s: examples/cpp_app_demo.cpp.s
.PHONY : examples/cpp_app_demo.s

# target to generate assembly for a file
examples/cpp_app_demo.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/cpp_app_demo.dir/build.make CMakeFiles/cpp_app_demo.dir/examples/cpp_app_demo.cpp.s
.PHONY : examples/cpp_app_demo.cpp.s

examples/hello_world.o: examples/hello_world.cpp.o
.PHONY : examples/hello_world.o

# target to build an object file
examples/hello_world.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/hello_world.dir/build.make CMakeFiles/hello_world.dir/examples/hello_world.cpp.o
.PHONY : examples/hello_world.cpp.o

examples/hello_world.i: examples/hello_world.cpp.i
.PHONY : examples/hello_world.i

# target to preprocess a source file
examples/hello_world.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/hello_world.dir/build.make CMakeFiles/hello_world.dir/examples/hello_world.cpp.i
.PHONY : examples/hello_world.cpp.i

examples/hello_world.s: examples/hello_world.cpp.s
.PHONY : examples/hello_world.s

# target to generate assembly for a file
examples/hello_world.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/hello_world.dir/build.make CMakeFiles/hello_world.dir/examples/hello_world.cpp.s
.PHONY : examples/hello_world.cpp.s

fasterapi/bench_hpack.o: fasterapi/bench_hpack.cpp.o
.PHONY : fasterapi/bench_hpack.o

# target to build an object file
fasterapi/bench_hpack.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_hpack.dir/build.make CMakeFiles/bench_hpack.dir/fasterapi/bench_hpack.cpp.o
.PHONY : fasterapi/bench_hpack.cpp.o

fasterapi/bench_hpack.i: fasterapi/bench_hpack.cpp.i
.PHONY : fasterapi/bench_hpack.i

# target to preprocess a source file
fasterapi/bench_hpack.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_hpack.dir/build.make CMakeFiles/bench_hpack.dir/fasterapi/bench_hpack.cpp.i
.PHONY : fasterapi/bench_hpack.cpp.i

fasterapi/bench_hpack.s: fasterapi/bench_hpack.cpp.s
.PHONY : fasterapi/bench_hpack.s

# target to generate assembly for a file
fasterapi/bench_hpack.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_hpack.dir/build.make CMakeFiles/bench_hpack.dir/fasterapi/bench_hpack.cpp.s
.PHONY : fasterapi/bench_hpack.cpp.s

fasterapi/bench_http1_parser.o: fasterapi/bench_http1_parser.cpp.o
.PHONY : fasterapi/bench_http1_parser.o

# target to build an object file
fasterapi/bench_http1_parser.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_http1_parser.dir/build.make CMakeFiles/bench_http1_parser.dir/fasterapi/bench_http1_parser.cpp.o
.PHONY : fasterapi/bench_http1_parser.cpp.o

fasterapi/bench_http1_parser.i: fasterapi/bench_http1_parser.cpp.i
.PHONY : fasterapi/bench_http1_parser.i

# target to preprocess a source file
fasterapi/bench_http1_parser.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_http1_parser.dir/build.make CMakeFiles/bench_http1_parser.dir/fasterapi/bench_http1_parser.cpp.i
.PHONY : fasterapi/bench_http1_parser.cpp.i

fasterapi/bench_http1_parser.s: fasterapi/bench_http1_parser.cpp.s
.PHONY : fasterapi/bench_http1_parser.s

# target to generate assembly for a file
fasterapi/bench_http1_parser.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_http1_parser.dir/build.make CMakeFiles/bench_http1_parser.dir/fasterapi/bench_http1_parser.cpp.s
.PHONY : fasterapi/bench_http1_parser.cpp.s

fasterapi/bench_pure_cpp.o: fasterapi/bench_pure_cpp.cpp.o
.PHONY : fasterapi/bench_pure_cpp.o

# target to build an object file
fasterapi/bench_pure_cpp.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_pure_cpp.dir/build.make CMakeFiles/bench_pure_cpp.dir/fasterapi/bench_pure_cpp.cpp.o
.PHONY : fasterapi/bench_pure_cpp.cpp.o

fasterapi/bench_pure_cpp.i: fasterapi/bench_pure_cpp.cpp.i
.PHONY : fasterapi/bench_pure_cpp.i

# target to preprocess a source file
fasterapi/bench_pure_cpp.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_pure_cpp.dir/build.make CMakeFiles/bench_pure_cpp.dir/fasterapi/bench_pure_cpp.cpp.i
.PHONY : fasterapi/bench_pure_cpp.cpp.i

fasterapi/bench_pure_cpp.s: fasterapi/bench_pure_cpp.cpp.s
.PHONY : fasterapi/bench_pure_cpp.s

# target to generate assembly for a file
fasterapi/bench_pure_cpp.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_pure_cpp.dir/build.make CMakeFiles/bench_pure_cpp.dir/fasterapi/bench_pure_cpp.cpp.s
.PHONY : fasterapi/bench_pure_cpp.cpp.s

fasterapi/bench_router.o: fasterapi/bench_router.cpp.o
.PHONY : fasterapi/bench_router.o

# target to build an object file
fasterapi/bench_router.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_router.dir/build.make CMakeFiles/bench_router.dir/fasterapi/bench_router.cpp.o
.PHONY : fasterapi/bench_router.cpp.o

fasterapi/bench_router.i: fasterapi/bench_router.cpp.i
.PHONY : fasterapi/bench_router.i

# target to preprocess a source file
fasterapi/bench_router.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_router.dir/build.make CMakeFiles/bench_router.dir/fasterapi/bench_router.cpp.i
.PHONY : fasterapi/bench_router.cpp.i

fasterapi/bench_router.s: fasterapi/bench_router.cpp.s
.PHONY : fasterapi/bench_router.s

# target to generate assembly for a file
fasterapi/bench_router.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_router.dir/build.make CMakeFiles/bench_router.dir/fasterapi/bench_router.cpp.s
.PHONY : fasterapi/bench_router.cpp.s

python_interop/bench_gil_strategies.o: python_interop/bench_gil_strategies.cpp.o
.PHONY : python_interop/bench_gil_strategies.o

# target to build an object file
python_interop/bench_gil_strategies.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/python_interop/bench_gil_strategies.cpp.o
.PHONY : python_interop/bench_gil_strategies.cpp.o

python_interop/bench_gil_strategies.i: python_interop/bench_gil_strategies.cpp.i
.PHONY : python_interop/bench_gil_strategies.i

# target to preprocess a source file
python_interop/bench_gil_strategies.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/python_interop/bench_gil_strategies.cpp.i
.PHONY : python_interop/bench_gil_strategies.cpp.i

python_interop/bench_gil_strategies.s: python_interop/bench_gil_strategies.cpp.s
.PHONY : python_interop/bench_gil_strategies.s

# target to generate assembly for a file
python_interop/bench_gil_strategies.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/python_interop/bench_gil_strategies.cpp.s
.PHONY : python_interop/bench_gil_strategies.cpp.s

python_interop/bench_queue_performance.o: python_interop/bench_queue_performance.cpp.o
.PHONY : python_interop/bench_queue_performance.o

# target to build an object file
python_interop/bench_queue_performance.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_queue_performance.dir/build.make CMakeFiles/bench_queue_performance.dir/python_interop/bench_queue_performance.cpp.o
.PHONY : python_interop/bench_queue_performance.cpp.o

python_interop/bench_queue_performance.i: python_interop/bench_queue_performance.cpp.i
.PHONY : python_interop/bench_queue_performance.i

# target to preprocess a source file
python_interop/bench_queue_performance.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_queue_performance.dir/build.make CMakeFiles/bench_queue_performance.dir/python_interop/bench_queue_performance.cpp.i
.PHONY : python_interop/bench_queue_performance.cpp.i

python_interop/bench_queue_performance.s: python_interop/bench_queue_performance.cpp.s
.PHONY : python_interop/bench_queue_performance.s

# target to generate assembly for a file
python_interop/bench_queue_performance.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_queue_performance.dir/build.make CMakeFiles/bench_queue_performance.dir/python_interop/bench_queue_performance.cpp.s
.PHONY : python_interop/bench_queue_performance.cpp.s

src/cpp/core/async_io.o: src/cpp/core/async_io.cpp.o
.PHONY : src/cpp/core/async_io.o

# target to build an object file
src/cpp/core/async_io.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/core/async_io.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/core/async_io.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/core/async_io.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/core/async_io.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/core/async_io.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_async_server.dir/build.make CMakeFiles/1mrc_async_server.dir/src/cpp/core/async_io.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/core/async_io.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/core/async_io.cpp.o
.PHONY : src/cpp/core/async_io.cpp.o

src/cpp/core/async_io.i: src/cpp/core/async_io.cpp.i
.PHONY : src/cpp/core/async_io.i

# target to preprocess a source file
src/cpp/core/async_io.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/core/async_io.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/core/async_io.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/core/async_io.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/core/async_io.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/core/async_io.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_async_server.dir/build.make CMakeFiles/1mrc_async_server.dir/src/cpp/core/async_io.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/core/async_io.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/core/async_io.cpp.i
.PHONY : src/cpp/core/async_io.cpp.i

src/cpp/core/async_io.s: src/cpp/core/async_io.cpp.s
.PHONY : src/cpp/core/async_io.s

# target to generate assembly for a file
src/cpp/core/async_io.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/core/async_io.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/core/async_io.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/core/async_io.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/core/async_io.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/core/async_io.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_async_server.dir/build.make CMakeFiles/1mrc_async_server.dir/src/cpp/core/async_io.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/core/async_io.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/core/async_io.cpp.s
.PHONY : src/cpp/core/async_io.cpp.s

src/cpp/core/async_io_kqueue.o: src/cpp/core/async_io_kqueue.cpp.o
.PHONY : src/cpp/core/async_io_kqueue.o

# target to build an object file
src/cpp/core/async_io_kqueue.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/core/async_io_kqueue.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/core/async_io_kqueue.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/core/async_io_kqueue.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/core/async_io_kqueue.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/core/async_io_kqueue.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_async_server.dir/build.make CMakeFiles/1mrc_async_server.dir/src/cpp/core/async_io_kqueue.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/core/async_io_kqueue.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/core/async_io_kqueue.cpp.o
.PHONY : src/cpp/core/async_io_kqueue.cpp.o

src/cpp/core/async_io_kqueue.i: src/cpp/core/async_io_kqueue.cpp.i
.PHONY : src/cpp/core/async_io_kqueue.i

# target to preprocess a source file
src/cpp/core/async_io_kqueue.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/core/async_io_kqueue.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/core/async_io_kqueue.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/core/async_io_kqueue.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/core/async_io_kqueue.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/core/async_io_kqueue.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_async_server.dir/build.make CMakeFiles/1mrc_async_server.dir/src/cpp/core/async_io_kqueue.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/core/async_io_kqueue.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/core/async_io_kqueue.cpp.i
.PHONY : src/cpp/core/async_io_kqueue.cpp.i

src/cpp/core/async_io_kqueue.s: src/cpp/core/async_io_kqueue.cpp.s
.PHONY : src/cpp/core/async_io_kqueue.s

# target to generate assembly for a file
src/cpp/core/async_io_kqueue.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/core/async_io_kqueue.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/core/async_io_kqueue.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/core/async_io_kqueue.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/core/async_io_kqueue.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/core/async_io_kqueue.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_async_server.dir/build.make CMakeFiles/1mrc_async_server.dir/src/cpp/core/async_io_kqueue.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/core/async_io_kqueue.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/core/async_io_kqueue.cpp.s
.PHONY : src/cpp/core/async_io_kqueue.cpp.s

src/cpp/core/reactor.o: src/cpp/core/reactor.cpp.o
.PHONY : src/cpp/core/reactor.o

# target to build an object file
src/cpp/core/reactor.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/core/reactor.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/core/reactor.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/core/reactor.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/core/reactor.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_pure_cpp.dir/build.make CMakeFiles/bench_pure_cpp.dir/src/cpp/core/reactor.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/core/reactor.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_async_server.dir/build.make CMakeFiles/1mrc_async_server.dir/src/cpp/core/reactor.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/core/reactor.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/core/reactor.cpp.o
.PHONY : src/cpp/core/reactor.cpp.o

src/cpp/core/reactor.i: src/cpp/core/reactor.cpp.i
.PHONY : src/cpp/core/reactor.i

# target to preprocess a source file
src/cpp/core/reactor.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/core/reactor.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/core/reactor.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/core/reactor.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/core/reactor.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_pure_cpp.dir/build.make CMakeFiles/bench_pure_cpp.dir/src/cpp/core/reactor.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/core/reactor.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_async_server.dir/build.make CMakeFiles/1mrc_async_server.dir/src/cpp/core/reactor.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/core/reactor.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/core/reactor.cpp.i
.PHONY : src/cpp/core/reactor.cpp.i

src/cpp/core/reactor.s: src/cpp/core/reactor.cpp.s
.PHONY : src/cpp/core/reactor.s

# target to generate assembly for a file
src/cpp/core/reactor.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/core/reactor.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/core/reactor.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/core/reactor.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/core/reactor.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_pure_cpp.dir/build.make CMakeFiles/bench_pure_cpp.dir/src/cpp/core/reactor.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/core/reactor.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_async_server.dir/build.make CMakeFiles/1mrc_async_server.dir/src/cpp/core/reactor.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/core/reactor.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/core/reactor.cpp.s
.PHONY : src/cpp/core/reactor.cpp.s

src/cpp/core/ring_buffer.o: src/cpp/core/ring_buffer.cpp.o
.PHONY : src/cpp/core/ring_buffer.o

# target to build an object file
src/cpp/core/ring_buffer.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/core/ring_buffer.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/core/ring_buffer.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/core/ring_buffer.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc_media.dir/build.make CMakeFiles/test_webrtc_media.dir/src/cpp/core/ring_buffer.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/core/ring_buffer.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/core/ring_buffer.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_async_server.dir/build.make CMakeFiles/1mrc_async_server.dir/src/cpp/core/ring_buffer.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/core/ring_buffer.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/core/ring_buffer.cpp.o
.PHONY : src/cpp/core/ring_buffer.cpp.o

src/cpp/core/ring_buffer.i: src/cpp/core/ring_buffer.cpp.i
.PHONY : src/cpp/core/ring_buffer.i

# target to preprocess a source file
src/cpp/core/ring_buffer.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/core/ring_buffer.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/core/ring_buffer.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/core/ring_buffer.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc_media.dir/build.make CMakeFiles/test_webrtc_media.dir/src/cpp/core/ring_buffer.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/core/ring_buffer.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/core/ring_buffer.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_async_server.dir/build.make CMakeFiles/1mrc_async_server.dir/src/cpp/core/ring_buffer.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/core/ring_buffer.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/core/ring_buffer.cpp.i
.PHONY : src/cpp/core/ring_buffer.cpp.i

src/cpp/core/ring_buffer.s: src/cpp/core/ring_buffer.cpp.s
.PHONY : src/cpp/core/ring_buffer.s

# target to generate assembly for a file
src/cpp/core/ring_buffer.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/core/ring_buffer.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/core/ring_buffer.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/core/ring_buffer.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc_media.dir/build.make CMakeFiles/test_webrtc_media.dir/src/cpp/core/ring_buffer.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/core/ring_buffer.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/core/ring_buffer.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_async_server.dir/build.make CMakeFiles/1mrc_async_server.dir/src/cpp/core/ring_buffer.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/core/ring_buffer.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/core/ring_buffer.cpp.s
.PHONY : src/cpp/core/ring_buffer.cpp.s

src/cpp/http/event_loop_pool.o: src/cpp/http/event_loop_pool.cpp.o
.PHONY : src/cpp/http/event_loop_pool.o

# target to build an object file
src/cpp/http/event_loop_pool.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/event_loop_pool.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/event_loop_pool.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/event_loop_pool.cpp.o
.PHONY : src/cpp/http/event_loop_pool.cpp.o

src/cpp/http/event_loop_pool.i: src/cpp/http/event_loop_pool.cpp.i
.PHONY : src/cpp/http/event_loop_pool.i

# target to preprocess a source file
src/cpp/http/event_loop_pool.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/event_loop_pool.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/event_loop_pool.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/event_loop_pool.cpp.i
.PHONY : src/cpp/http/event_loop_pool.cpp.i

src/cpp/http/event_loop_pool.s: src/cpp/http/event_loop_pool.cpp.s
.PHONY : src/cpp/http/event_loop_pool.s

# target to generate assembly for a file
src/cpp/http/event_loop_pool.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/event_loop_pool.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/event_loop_pool.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/event_loop_pool.cpp.s
.PHONY : src/cpp/http/event_loop_pool.cpp.s

src/cpp/http/h2_handler.o: src/cpp/http/h2_handler.cpp.o
.PHONY : src/cpp/http/h2_handler.o

# target to build an object file
src/cpp/http/h2_handler.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/h2_handler.cpp.o
.PHONY : src/cpp/http/h2_handler.cpp.o

src/cpp/http/h2_handler.i: src/cpp/http/h2_handler.cpp.i
.PHONY : src/cpp/http/h2_handler.i

# target to preprocess a source file
src/cpp/http/h2_handler.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/h2_handler.cpp.i
.PHONY : src/cpp/http/h2_handler.cpp.i

src/cpp/http/h2_handler.s: src/cpp/http/h2_handler.cpp.s
.PHONY : src/cpp/http/h2_handler.s

# target to generate assembly for a file
src/cpp/http/h2_handler.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/h2_handler.cpp.s
.PHONY : src/cpp/http/h2_handler.cpp.s

src/cpp/http/h2_server_push.o: src/cpp/http/h2_server_push.cpp.o
.PHONY : src/cpp/http/h2_server_push.o

# target to build an object file
src/cpp/http/h2_server_push.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/h2_server_push.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_h2_server_push.dir/build.make CMakeFiles/test_h2_server_push.dir/src/cpp/http/h2_server_push.cpp.o
.PHONY : src/cpp/http/h2_server_push.cpp.o

src/cpp/http/h2_server_push.i: src/cpp/http/h2_server_push.cpp.i
.PHONY : src/cpp/http/h2_server_push.i

# target to preprocess a source file
src/cpp/http/h2_server_push.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/h2_server_push.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_h2_server_push.dir/build.make CMakeFiles/test_h2_server_push.dir/src/cpp/http/h2_server_push.cpp.i
.PHONY : src/cpp/http/h2_server_push.cpp.i

src/cpp/http/h2_server_push.s: src/cpp/http/h2_server_push.cpp.s
.PHONY : src/cpp/http/h2_server_push.s

# target to generate assembly for a file
src/cpp/http/h2_server_push.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/h2_server_push.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_h2_server_push.dir/build.make CMakeFiles/test_h2_server_push.dir/src/cpp/http/h2_server_push.cpp.s
.PHONY : src/cpp/http/h2_server_push.cpp.s

src/cpp/http/health_monitor.o: src/cpp/http/health_monitor.cpp.o
.PHONY : src/cpp/http/health_monitor.o

# target to build an object file
src/cpp/http/health_monitor.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/health_monitor.cpp.o
.PHONY : src/cpp/http/health_monitor.cpp.o

src/cpp/http/health_monitor.i: src/cpp/http/health_monitor.cpp.i
.PHONY : src/cpp/http/health_monitor.i

# target to preprocess a source file
src/cpp/http/health_monitor.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/health_monitor.cpp.i
.PHONY : src/cpp/http/health_monitor.cpp.i

src/cpp/http/health_monitor.s: src/cpp/http/health_monitor.cpp.s
.PHONY : src/cpp/http/health_monitor.s

# target to generate assembly for a file
src/cpp/http/health_monitor.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/health_monitor.cpp.s
.PHONY : src/cpp/http/health_monitor.cpp.s

src/cpp/http/hpack.o: src/cpp/http/hpack.cpp.o
.PHONY : src/cpp/http/hpack.o

# target to build an object file
src/cpp/http/hpack.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/hpack.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_hpack.dir/build.make CMakeFiles/test_hpack.dir/src/cpp/http/hpack.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_hpack.dir/build.make CMakeFiles/bench_hpack.dir/src/cpp/http/hpack.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_h2_server_push.dir/build.make CMakeFiles/test_h2_server_push.dir/src/cpp/http/hpack.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_pure_cpp.dir/build.make CMakeFiles/bench_pure_cpp.dir/src/cpp/http/hpack.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/src/cpp/http/hpack.cpp.o
.PHONY : src/cpp/http/hpack.cpp.o

src/cpp/http/hpack.i: src/cpp/http/hpack.cpp.i
.PHONY : src/cpp/http/hpack.i

# target to preprocess a source file
src/cpp/http/hpack.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/hpack.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_hpack.dir/build.make CMakeFiles/test_hpack.dir/src/cpp/http/hpack.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_hpack.dir/build.make CMakeFiles/bench_hpack.dir/src/cpp/http/hpack.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_h2_server_push.dir/build.make CMakeFiles/test_h2_server_push.dir/src/cpp/http/hpack.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_pure_cpp.dir/build.make CMakeFiles/bench_pure_cpp.dir/src/cpp/http/hpack.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/src/cpp/http/hpack.cpp.i
.PHONY : src/cpp/http/hpack.cpp.i

src/cpp/http/hpack.s: src/cpp/http/hpack.cpp.s
.PHONY : src/cpp/http/hpack.s

# target to generate assembly for a file
src/cpp/http/hpack.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/hpack.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_hpack.dir/build.make CMakeFiles/test_hpack.dir/src/cpp/http/hpack.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_hpack.dir/build.make CMakeFiles/bench_hpack.dir/src/cpp/http/hpack.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_h2_server_push.dir/build.make CMakeFiles/test_h2_server_push.dir/src/cpp/http/hpack.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_pure_cpp.dir/build.make CMakeFiles/bench_pure_cpp.dir/src/cpp/http/hpack.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/src/cpp/http/hpack.cpp.s
.PHONY : src/cpp/http/hpack.cpp.s

src/cpp/http/http1_coroio_handler.o: src/cpp/http/http1_coroio_handler.cpp.o
.PHONY : src/cpp/http/http1_coroio_handler.o

# target to build an object file
src/cpp/http/http1_coroio_handler.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/http1_coroio_handler.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/http1_coroio_handler.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/http1_coroio_handler.cpp.o
.PHONY : src/cpp/http/http1_coroio_handler.cpp.o

src/cpp/http/http1_coroio_handler.i: src/cpp/http/http1_coroio_handler.cpp.i
.PHONY : src/cpp/http/http1_coroio_handler.i

# target to preprocess a source file
src/cpp/http/http1_coroio_handler.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/http1_coroio_handler.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/http1_coroio_handler.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/http1_coroio_handler.cpp.i
.PHONY : src/cpp/http/http1_coroio_handler.cpp.i

src/cpp/http/http1_coroio_handler.s: src/cpp/http/http1_coroio_handler.cpp.s
.PHONY : src/cpp/http/http1_coroio_handler.s

# target to generate assembly for a file
src/cpp/http/http1_coroio_handler.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/http1_coroio_handler.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/http1_coroio_handler.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/http1_coroio_handler.cpp.s
.PHONY : src/cpp/http/http1_coroio_handler.cpp.s

src/cpp/http/http1_parser.o: src/cpp/http/http1_parser.cpp.o
.PHONY : src/cpp/http/http1_parser.o

# target to build an object file
src/cpp/http/http1_parser.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/http1_parser.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/src/cpp/http/http1_parser.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_parser.dir/build.make CMakeFiles/test_http1_parser.dir/src/cpp/http/http1_parser.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_http1_parser.dir/build.make CMakeFiles/bench_http1_parser.dir/src/cpp/http/http1_parser.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_native_types.dir/build.make CMakeFiles/test_native_types.dir/src/cpp/http/http1_parser.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/http1_parser.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_pure_cpp.dir/build.make CMakeFiles/bench_pure_cpp.dir/src/cpp/http/http1_parser.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/src/cpp/http/http1_parser.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/http/http1_parser.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/http1_parser.cpp.o
.PHONY : src/cpp/http/http1_parser.cpp.o

src/cpp/http/http1_parser.i: src/cpp/http/http1_parser.cpp.i
.PHONY : src/cpp/http/http1_parser.i

# target to preprocess a source file
src/cpp/http/http1_parser.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/http1_parser.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/src/cpp/http/http1_parser.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_parser.dir/build.make CMakeFiles/test_http1_parser.dir/src/cpp/http/http1_parser.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_http1_parser.dir/build.make CMakeFiles/bench_http1_parser.dir/src/cpp/http/http1_parser.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_native_types.dir/build.make CMakeFiles/test_native_types.dir/src/cpp/http/http1_parser.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/http1_parser.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_pure_cpp.dir/build.make CMakeFiles/bench_pure_cpp.dir/src/cpp/http/http1_parser.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/src/cpp/http/http1_parser.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/http/http1_parser.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/http1_parser.cpp.i
.PHONY : src/cpp/http/http1_parser.cpp.i

src/cpp/http/http1_parser.s: src/cpp/http/http1_parser.cpp.s
.PHONY : src/cpp/http/http1_parser.s

# target to generate assembly for a file
src/cpp/http/http1_parser.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/http1_parser.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/src/cpp/http/http1_parser.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_parser.dir/build.make CMakeFiles/test_http1_parser.dir/src/cpp/http/http1_parser.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_http1_parser.dir/build.make CMakeFiles/bench_http1_parser.dir/src/cpp/http/http1_parser.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_native_types.dir/build.make CMakeFiles/test_native_types.dir/src/cpp/http/http1_parser.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/http1_parser.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_pure_cpp.dir/build.make CMakeFiles/bench_pure_cpp.dir/src/cpp/http/http1_parser.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/src/cpp/http/http1_parser.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/http/http1_parser.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/http1_parser.cpp.s
.PHONY : src/cpp/http/http1_parser.cpp.s

src/cpp/http/http3_parser.o: src/cpp/http/http3_parser.cpp.o
.PHONY : src/cpp/http/http3_parser.o

# target to build an object file
src/cpp/http/http3_parser.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/http3_parser.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http3_parser.dir/build.make CMakeFiles/test_http3_parser.dir/src/cpp/http/http3_parser.cpp.o
.PHONY : src/cpp/http/http3_parser.cpp.o

src/cpp/http/http3_parser.i: src/cpp/http/http3_parser.cpp.i
.PHONY : src/cpp/http/http3_parser.i

# target to preprocess a source file
src/cpp/http/http3_parser.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/http3_parser.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http3_parser.dir/build.make CMakeFiles/test_http3_parser.dir/src/cpp/http/http3_parser.cpp.i
.PHONY : src/cpp/http/http3_parser.cpp.i

src/cpp/http/http3_parser.s: src/cpp/http/http3_parser.cpp.s
.PHONY : src/cpp/http/http3_parser.s

# target to generate assembly for a file
src/cpp/http/http3_parser.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/http3_parser.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http3_parser.dir/build.make CMakeFiles/test_http3_parser.dir/src/cpp/http/http3_parser.cpp.s
.PHONY : src/cpp/http/http3_parser.cpp.s

src/cpp/http/http_lib.o: src/cpp/http/http_lib.cpp.o
.PHONY : src/cpp/http/http_lib.o

# target to build an object file
src/cpp/http/http_lib.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/http_lib.cpp.o
.PHONY : src/cpp/http/http_lib.cpp.o

src/cpp/http/http_lib.i: src/cpp/http/http_lib.cpp.i
.PHONY : src/cpp/http/http_lib.i

# target to preprocess a source file
src/cpp/http/http_lib.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/http_lib.cpp.i
.PHONY : src/cpp/http/http_lib.cpp.i

src/cpp/http/http_lib.s: src/cpp/http/http_lib.cpp.s
.PHONY : src/cpp/http/http_lib.s

# target to generate assembly for a file
src/cpp/http/http_lib.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/http_lib.cpp.s
.PHONY : src/cpp/http/http_lib.cpp.s

src/cpp/http/http_parser.o: src/cpp/http/http_parser.cpp.o
.PHONY : src/cpp/http/http_parser.o

# target to build an object file
src/cpp/http/http_parser.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/http_parser.cpp.o
.PHONY : src/cpp/http/http_parser.cpp.o

src/cpp/http/http_parser.i: src/cpp/http/http_parser.cpp.i
.PHONY : src/cpp/http/http_parser.i

# target to preprocess a source file
src/cpp/http/http_parser.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/http_parser.cpp.i
.PHONY : src/cpp/http/http_parser.cpp.i

src/cpp/http/http_parser.s: src/cpp/http/http_parser.cpp.s
.PHONY : src/cpp/http/http_parser.s

# target to generate assembly for a file
src/cpp/http/http_parser.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/http_parser.cpp.s
.PHONY : src/cpp/http/http_parser.cpp.s

src/cpp/http/huffman.o: src/cpp/http/huffman.cpp.o
.PHONY : src/cpp/http/huffman.o

# target to build an object file
src/cpp/http/huffman.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/huffman.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_h2_server_push.dir/build.make CMakeFiles/test_h2_server_push.dir/src/cpp/http/huffman.cpp.o
.PHONY : src/cpp/http/huffman.cpp.o

src/cpp/http/huffman.i: src/cpp/http/huffman.cpp.i
.PHONY : src/cpp/http/huffman.i

# target to preprocess a source file
src/cpp/http/huffman.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/huffman.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_h2_server_push.dir/build.make CMakeFiles/test_h2_server_push.dir/src/cpp/http/huffman.cpp.i
.PHONY : src/cpp/http/huffman.cpp.i

src/cpp/http/huffman.s: src/cpp/http/huffman.cpp.s
.PHONY : src/cpp/http/huffman.s

# target to generate assembly for a file
src/cpp/http/huffman.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/huffman.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_h2_server_push.dir/build.make CMakeFiles/test_h2_server_push.dir/src/cpp/http/huffman.cpp.s
.PHONY : src/cpp/http/huffman.cpp.s

src/cpp/http/json_parser.o: src/cpp/http/json_parser.cpp.o
.PHONY : src/cpp/http/json_parser.o

# target to build an object file
src/cpp/http/json_parser.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/json_parser.cpp.o
.PHONY : src/cpp/http/json_parser.cpp.o

src/cpp/http/json_parser.i: src/cpp/http/json_parser.cpp.i
.PHONY : src/cpp/http/json_parser.i

# target to preprocess a source file
src/cpp/http/json_parser.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/json_parser.cpp.i
.PHONY : src/cpp/http/json_parser.cpp.i

src/cpp/http/json_parser.s: src/cpp/http/json_parser.cpp.s
.PHONY : src/cpp/http/json_parser.s

# target to generate assembly for a file
src/cpp/http/json_parser.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/json_parser.cpp.s
.PHONY : src/cpp/http/json_parser.cpp.s

src/cpp/http/middleware.o: src/cpp/http/middleware.cpp.o
.PHONY : src/cpp/http/middleware.o

# target to build an object file
src/cpp/http/middleware.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/middleware.cpp.o
.PHONY : src/cpp/http/middleware.cpp.o

src/cpp/http/middleware.i: src/cpp/http/middleware.cpp.i
.PHONY : src/cpp/http/middleware.i

# target to preprocess a source file
src/cpp/http/middleware.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/middleware.cpp.i
.PHONY : src/cpp/http/middleware.cpp.i

src/cpp/http/middleware.s: src/cpp/http/middleware.cpp.s
.PHONY : src/cpp/http/middleware.s

# target to generate assembly for a file
src/cpp/http/middleware.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/middleware.cpp.s
.PHONY : src/cpp/http/middleware.cpp.s

src/cpp/http/python_callback_bridge.o: src/cpp/http/python_callback_bridge.cpp.o
.PHONY : src/cpp/http/python_callback_bridge.o

# target to build an object file
src/cpp/http/python_callback_bridge.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/python_callback_bridge.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/python_callback_bridge.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/python_callback_bridge.cpp.o
.PHONY : src/cpp/http/python_callback_bridge.cpp.o

src/cpp/http/python_callback_bridge.i: src/cpp/http/python_callback_bridge.cpp.i
.PHONY : src/cpp/http/python_callback_bridge.i

# target to preprocess a source file
src/cpp/http/python_callback_bridge.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/python_callback_bridge.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/python_callback_bridge.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/python_callback_bridge.cpp.i
.PHONY : src/cpp/http/python_callback_bridge.cpp.i

src/cpp/http/python_callback_bridge.s: src/cpp/http/python_callback_bridge.cpp.s
.PHONY : src/cpp/http/python_callback_bridge.s

# target to generate assembly for a file
src/cpp/http/python_callback_bridge.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/python_callback_bridge.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/python_callback_bridge.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/python_callback_bridge.cpp.s
.PHONY : src/cpp/http/python_callback_bridge.cpp.s

src/cpp/http/request.o: src/cpp/http/request.cpp.o
.PHONY : src/cpp/http/request.o

# target to build an object file
src/cpp/http/request.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/request.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/request.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/request.cpp.o
.PHONY : src/cpp/http/request.cpp.o

src/cpp/http/request.i: src/cpp/http/request.cpp.i
.PHONY : src/cpp/http/request.i

# target to preprocess a source file
src/cpp/http/request.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/request.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/request.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/request.cpp.i
.PHONY : src/cpp/http/request.cpp.i

src/cpp/http/request.s: src/cpp/http/request.cpp.s
.PHONY : src/cpp/http/request.s

# target to generate assembly for a file
src/cpp/http/request.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/request.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/request.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/request.cpp.s
.PHONY : src/cpp/http/request.cpp.s

src/cpp/http/response.o: src/cpp/http/response.cpp.o
.PHONY : src/cpp/http/response.o

# target to build an object file
src/cpp/http/response.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/response.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/response.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/response.cpp.o
.PHONY : src/cpp/http/response.cpp.o

src/cpp/http/response.i: src/cpp/http/response.cpp.i
.PHONY : src/cpp/http/response.i

# target to preprocess a source file
src/cpp/http/response.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/response.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/response.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/response.cpp.i
.PHONY : src/cpp/http/response.cpp.i

src/cpp/http/response.s: src/cpp/http/response.cpp.s
.PHONY : src/cpp/http/response.s

# target to generate assembly for a file
src/cpp/http/response.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/response.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/response.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/response.cpp.s
.PHONY : src/cpp/http/response.cpp.s

src/cpp/http/router.o: src/cpp/http/router.cpp.o
.PHONY : src/cpp/http/router.o

# target to build an object file
src/cpp/http/router.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/router.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_router.dir/build.make CMakeFiles/test_router.dir/src/cpp/http/router.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_router.dir/build.make CMakeFiles/bench_router.dir/src/cpp/http/router.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/router.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_pure_cpp.dir/build.make CMakeFiles/bench_pure_cpp.dir/src/cpp/http/router.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/src/cpp/http/router.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/http/router.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/router.cpp.o
.PHONY : src/cpp/http/router.cpp.o

src/cpp/http/router.i: src/cpp/http/router.cpp.i
.PHONY : src/cpp/http/router.i

# target to preprocess a source file
src/cpp/http/router.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/router.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_router.dir/build.make CMakeFiles/test_router.dir/src/cpp/http/router.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_router.dir/build.make CMakeFiles/bench_router.dir/src/cpp/http/router.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/router.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_pure_cpp.dir/build.make CMakeFiles/bench_pure_cpp.dir/src/cpp/http/router.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/src/cpp/http/router.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/http/router.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/router.cpp.i
.PHONY : src/cpp/http/router.cpp.i

src/cpp/http/router.s: src/cpp/http/router.cpp.s
.PHONY : src/cpp/http/router.s

# target to generate assembly for a file
src/cpp/http/router.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/router.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_router.dir/build.make CMakeFiles/test_router.dir/src/cpp/http/router.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_router.dir/build.make CMakeFiles/bench_router.dir/src/cpp/http/router.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/router.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_pure_cpp.dir/build.make CMakeFiles/bench_pure_cpp.dir/src/cpp/http/router.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/src/cpp/http/router.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/src/cpp/http/router.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/router.cpp.s
.PHONY : src/cpp/http/router.cpp.s

src/cpp/http/server.o: src/cpp/http/server.cpp.o
.PHONY : src/cpp/http/server.o

# target to build an object file
src/cpp/http/server.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/server.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/server.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/server.cpp.o
.PHONY : src/cpp/http/server.cpp.o

src/cpp/http/server.i: src/cpp/http/server.cpp.i
.PHONY : src/cpp/http/server.i

# target to preprocess a source file
src/cpp/http/server.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/server.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/server.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/server.cpp.i
.PHONY : src/cpp/http/server.cpp.i

src/cpp/http/server.s: src/cpp/http/server.cpp.s
.PHONY : src/cpp/http/server.s

# target to generate assembly for a file
src/cpp/http/server.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/server.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/src/cpp/http/server.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/1mrc_coroio_server.dir/build.make CMakeFiles/1mrc_coroio_server.dir/src/cpp/http/server.cpp.s
.PHONY : src/cpp/http/server.cpp.s

src/cpp/http/sse.o: src/cpp/http/sse.cpp.o
.PHONY : src/cpp/http/sse.o

# target to build an object file
src/cpp/http/sse.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/sse.cpp.o
.PHONY : src/cpp/http/sse.cpp.o

src/cpp/http/sse.i: src/cpp/http/sse.cpp.i
.PHONY : src/cpp/http/sse.i

# target to preprocess a source file
src/cpp/http/sse.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/sse.cpp.i
.PHONY : src/cpp/http/sse.cpp.i

src/cpp/http/sse.s: src/cpp/http/sse.cpp.s
.PHONY : src/cpp/http/sse.s

# target to generate assembly for a file
src/cpp/http/sse.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/sse.cpp.s
.PHONY : src/cpp/http/sse.cpp.s

src/cpp/http/sse_lib.o: src/cpp/http/sse_lib.cpp.o
.PHONY : src/cpp/http/sse_lib.o

# target to build an object file
src/cpp/http/sse_lib.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/sse_lib.cpp.o
.PHONY : src/cpp/http/sse_lib.cpp.o

src/cpp/http/sse_lib.i: src/cpp/http/sse_lib.cpp.i
.PHONY : src/cpp/http/sse_lib.i

# target to preprocess a source file
src/cpp/http/sse_lib.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/sse_lib.cpp.i
.PHONY : src/cpp/http/sse_lib.cpp.i

src/cpp/http/sse_lib.s: src/cpp/http/sse_lib.cpp.s
.PHONY : src/cpp/http/sse_lib.s

# target to generate assembly for a file
src/cpp/http/sse_lib.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/sse_lib.cpp.s
.PHONY : src/cpp/http/sse_lib.cpp.s

src/cpp/http/websocket.o: src/cpp/http/websocket.cpp.o
.PHONY : src/cpp/http/websocket.o

# target to build an object file
src/cpp/http/websocket.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/websocket.cpp.o
.PHONY : src/cpp/http/websocket.cpp.o

src/cpp/http/websocket.i: src/cpp/http/websocket.cpp.i
.PHONY : src/cpp/http/websocket.i

# target to preprocess a source file
src/cpp/http/websocket.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/websocket.cpp.i
.PHONY : src/cpp/http/websocket.cpp.i

src/cpp/http/websocket.s: src/cpp/http/websocket.cpp.s
.PHONY : src/cpp/http/websocket.s

# target to generate assembly for a file
src/cpp/http/websocket.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/websocket.cpp.s
.PHONY : src/cpp/http/websocket.cpp.s

src/cpp/http/websocket_lib.o: src/cpp/http/websocket_lib.cpp.o
.PHONY : src/cpp/http/websocket_lib.o

# target to build an object file
src/cpp/http/websocket_lib.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/websocket_lib.cpp.o
.PHONY : src/cpp/http/websocket_lib.cpp.o

src/cpp/http/websocket_lib.i: src/cpp/http/websocket_lib.cpp.i
.PHONY : src/cpp/http/websocket_lib.i

# target to preprocess a source file
src/cpp/http/websocket_lib.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/websocket_lib.cpp.i
.PHONY : src/cpp/http/websocket_lib.cpp.i

src/cpp/http/websocket_lib.s: src/cpp/http/websocket_lib.cpp.s
.PHONY : src/cpp/http/websocket_lib.s

# target to generate assembly for a file
src/cpp/http/websocket_lib.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/websocket_lib.cpp.s
.PHONY : src/cpp/http/websocket_lib.cpp.s

src/cpp/http/websocket_parser.o: src/cpp/http/websocket_parser.cpp.o
.PHONY : src/cpp/http/websocket_parser.o

# target to build an object file
src/cpp/http/websocket_parser.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/websocket_parser.cpp.o
.PHONY : src/cpp/http/websocket_parser.cpp.o

src/cpp/http/websocket_parser.i: src/cpp/http/websocket_parser.cpp.i
.PHONY : src/cpp/http/websocket_parser.i

# target to preprocess a source file
src/cpp/http/websocket_parser.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/websocket_parser.cpp.i
.PHONY : src/cpp/http/websocket_parser.cpp.i

src/cpp/http/websocket_parser.s: src/cpp/http/websocket_parser.cpp.s
.PHONY : src/cpp/http/websocket_parser.s

# target to generate assembly for a file
src/cpp/http/websocket_parser.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/http/websocket_parser.cpp.s
.PHONY : src/cpp/http/websocket_parser.cpp.s

src/cpp/mcp/mcp_lib.o: src/cpp/mcp/mcp_lib.cpp.o
.PHONY : src/cpp/mcp/mcp_lib.o

# target to build an object file
src/cpp/mcp/mcp_lib.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/mcp_lib.cpp.o
.PHONY : src/cpp/mcp/mcp_lib.cpp.o

src/cpp/mcp/mcp_lib.i: src/cpp/mcp/mcp_lib.cpp.i
.PHONY : src/cpp/mcp/mcp_lib.i

# target to preprocess a source file
src/cpp/mcp/mcp_lib.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/mcp_lib.cpp.i
.PHONY : src/cpp/mcp/mcp_lib.cpp.i

src/cpp/mcp/mcp_lib.s: src/cpp/mcp/mcp_lib.cpp.s
.PHONY : src/cpp/mcp/mcp_lib.s

# target to generate assembly for a file
src/cpp/mcp/mcp_lib.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/mcp_lib.cpp.s
.PHONY : src/cpp/mcp/mcp_lib.cpp.s

src/cpp/mcp/protocol/message.o: src/cpp/mcp/protocol/message.cpp.o
.PHONY : src/cpp/mcp/protocol/message.o

# target to build an object file
src/cpp/mcp/protocol/message.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/protocol/message.cpp.o
.PHONY : src/cpp/mcp/protocol/message.cpp.o

src/cpp/mcp/protocol/message.i: src/cpp/mcp/protocol/message.cpp.i
.PHONY : src/cpp/mcp/protocol/message.i

# target to preprocess a source file
src/cpp/mcp/protocol/message.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/protocol/message.cpp.i
.PHONY : src/cpp/mcp/protocol/message.cpp.i

src/cpp/mcp/protocol/message.s: src/cpp/mcp/protocol/message.cpp.s
.PHONY : src/cpp/mcp/protocol/message.s

# target to generate assembly for a file
src/cpp/mcp/protocol/message.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/protocol/message.cpp.s
.PHONY : src/cpp/mcp/protocol/message.cpp.s

src/cpp/mcp/protocol/session.o: src/cpp/mcp/protocol/session.cpp.o
.PHONY : src/cpp/mcp/protocol/session.o

# target to build an object file
src/cpp/mcp/protocol/session.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/protocol/session.cpp.o
.PHONY : src/cpp/mcp/protocol/session.cpp.o

src/cpp/mcp/protocol/session.i: src/cpp/mcp/protocol/session.cpp.i
.PHONY : src/cpp/mcp/protocol/session.i

# target to preprocess a source file
src/cpp/mcp/protocol/session.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/protocol/session.cpp.i
.PHONY : src/cpp/mcp/protocol/session.cpp.i

src/cpp/mcp/protocol/session.s: src/cpp/mcp/protocol/session.cpp.s
.PHONY : src/cpp/mcp/protocol/session.s

# target to generate assembly for a file
src/cpp/mcp/protocol/session.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/protocol/session.cpp.s
.PHONY : src/cpp/mcp/protocol/session.cpp.s

src/cpp/mcp/proxy/proxy_core.o: src/cpp/mcp/proxy/proxy_core.cpp.o
.PHONY : src/cpp/mcp/proxy/proxy_core.o

# target to build an object file
src/cpp/mcp/proxy/proxy_core.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/proxy/proxy_core.cpp.o
.PHONY : src/cpp/mcp/proxy/proxy_core.cpp.o

src/cpp/mcp/proxy/proxy_core.i: src/cpp/mcp/proxy/proxy_core.cpp.i
.PHONY : src/cpp/mcp/proxy/proxy_core.i

# target to preprocess a source file
src/cpp/mcp/proxy/proxy_core.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/proxy/proxy_core.cpp.i
.PHONY : src/cpp/mcp/proxy/proxy_core.cpp.i

src/cpp/mcp/proxy/proxy_core.s: src/cpp/mcp/proxy/proxy_core.cpp.s
.PHONY : src/cpp/mcp/proxy/proxy_core.s

# target to generate assembly for a file
src/cpp/mcp/proxy/proxy_core.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/proxy/proxy_core.cpp.s
.PHONY : src/cpp/mcp/proxy/proxy_core.cpp.s

src/cpp/mcp/proxy/upstream_connection.o: src/cpp/mcp/proxy/upstream_connection.cpp.o
.PHONY : src/cpp/mcp/proxy/upstream_connection.o

# target to build an object file
src/cpp/mcp/proxy/upstream_connection.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/proxy/upstream_connection.cpp.o
.PHONY : src/cpp/mcp/proxy/upstream_connection.cpp.o

src/cpp/mcp/proxy/upstream_connection.i: src/cpp/mcp/proxy/upstream_connection.cpp.i
.PHONY : src/cpp/mcp/proxy/upstream_connection.i

# target to preprocess a source file
src/cpp/mcp/proxy/upstream_connection.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/proxy/upstream_connection.cpp.i
.PHONY : src/cpp/mcp/proxy/upstream_connection.cpp.i

src/cpp/mcp/proxy/upstream_connection.s: src/cpp/mcp/proxy/upstream_connection.cpp.s
.PHONY : src/cpp/mcp/proxy/upstream_connection.s

# target to generate assembly for a file
src/cpp/mcp/proxy/upstream_connection.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/proxy/upstream_connection.cpp.s
.PHONY : src/cpp/mcp/proxy/upstream_connection.cpp.s

src/cpp/mcp/security/auth.o: src/cpp/mcp/security/auth.cpp.o
.PHONY : src/cpp/mcp/security/auth.o

# target to build an object file
src/cpp/mcp/security/auth.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/security/auth.cpp.o
.PHONY : src/cpp/mcp/security/auth.cpp.o

src/cpp/mcp/security/auth.i: src/cpp/mcp/security/auth.cpp.i
.PHONY : src/cpp/mcp/security/auth.i

# target to preprocess a source file
src/cpp/mcp/security/auth.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/security/auth.cpp.i
.PHONY : src/cpp/mcp/security/auth.cpp.i

src/cpp/mcp/security/auth.s: src/cpp/mcp/security/auth.cpp.s
.PHONY : src/cpp/mcp/security/auth.s

# target to generate assembly for a file
src/cpp/mcp/security/auth.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/security/auth.cpp.s
.PHONY : src/cpp/mcp/security/auth.cpp.s

src/cpp/mcp/security/rate_limit.o: src/cpp/mcp/security/rate_limit.cpp.o
.PHONY : src/cpp/mcp/security/rate_limit.o

# target to build an object file
src/cpp/mcp/security/rate_limit.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/security/rate_limit.cpp.o
.PHONY : src/cpp/mcp/security/rate_limit.cpp.o

src/cpp/mcp/security/rate_limit.i: src/cpp/mcp/security/rate_limit.cpp.i
.PHONY : src/cpp/mcp/security/rate_limit.i

# target to preprocess a source file
src/cpp/mcp/security/rate_limit.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/security/rate_limit.cpp.i
.PHONY : src/cpp/mcp/security/rate_limit.cpp.i

src/cpp/mcp/security/rate_limit.s: src/cpp/mcp/security/rate_limit.cpp.s
.PHONY : src/cpp/mcp/security/rate_limit.s

# target to generate assembly for a file
src/cpp/mcp/security/rate_limit.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/security/rate_limit.cpp.s
.PHONY : src/cpp/mcp/security/rate_limit.cpp.s

src/cpp/mcp/security/sandbox.o: src/cpp/mcp/security/sandbox.cpp.o
.PHONY : src/cpp/mcp/security/sandbox.o

# target to build an object file
src/cpp/mcp/security/sandbox.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/security/sandbox.cpp.o
.PHONY : src/cpp/mcp/security/sandbox.cpp.o

src/cpp/mcp/security/sandbox.i: src/cpp/mcp/security/sandbox.cpp.i
.PHONY : src/cpp/mcp/security/sandbox.i

# target to preprocess a source file
src/cpp/mcp/security/sandbox.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/security/sandbox.cpp.i
.PHONY : src/cpp/mcp/security/sandbox.cpp.i

src/cpp/mcp/security/sandbox.s: src/cpp/mcp/security/sandbox.cpp.s
.PHONY : src/cpp/mcp/security/sandbox.s

# target to generate assembly for a file
src/cpp/mcp/security/sandbox.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/security/sandbox.cpp.s
.PHONY : src/cpp/mcp/security/sandbox.cpp.s

src/cpp/mcp/server/mcp_server.o: src/cpp/mcp/server/mcp_server.cpp.o
.PHONY : src/cpp/mcp/server/mcp_server.o

# target to build an object file
src/cpp/mcp/server/mcp_server.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/server/mcp_server.cpp.o
.PHONY : src/cpp/mcp/server/mcp_server.cpp.o

src/cpp/mcp/server/mcp_server.i: src/cpp/mcp/server/mcp_server.cpp.i
.PHONY : src/cpp/mcp/server/mcp_server.i

# target to preprocess a source file
src/cpp/mcp/server/mcp_server.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/server/mcp_server.cpp.i
.PHONY : src/cpp/mcp/server/mcp_server.cpp.i

src/cpp/mcp/server/mcp_server.s: src/cpp/mcp/server/mcp_server.cpp.s
.PHONY : src/cpp/mcp/server/mcp_server.s

# target to generate assembly for a file
src/cpp/mcp/server/mcp_server.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/server/mcp_server.cpp.s
.PHONY : src/cpp/mcp/server/mcp_server.cpp.s

src/cpp/mcp/transports/stdio_transport.o: src/cpp/mcp/transports/stdio_transport.cpp.o
.PHONY : src/cpp/mcp/transports/stdio_transport.o

# target to build an object file
src/cpp/mcp/transports/stdio_transport.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/transports/stdio_transport.cpp.o
.PHONY : src/cpp/mcp/transports/stdio_transport.cpp.o

src/cpp/mcp/transports/stdio_transport.i: src/cpp/mcp/transports/stdio_transport.cpp.i
.PHONY : src/cpp/mcp/transports/stdio_transport.i

# target to preprocess a source file
src/cpp/mcp/transports/stdio_transport.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/transports/stdio_transport.cpp.i
.PHONY : src/cpp/mcp/transports/stdio_transport.cpp.i

src/cpp/mcp/transports/stdio_transport.s: src/cpp/mcp/transports/stdio_transport.cpp.s
.PHONY : src/cpp/mcp/transports/stdio_transport.s

# target to generate assembly for a file
src/cpp/mcp/transports/stdio_transport.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_mcp.dir/build.make CMakeFiles/fasterapi_mcp.dir/src/cpp/mcp/transports/stdio_transport.cpp.s
.PHONY : src/cpp/mcp/transports/stdio_transport.cpp.s

src/cpp/net/event_loop.o: src/cpp/net/event_loop.cpp.o
.PHONY : src/cpp/net/event_loop.o

# target to build an object file
src/cpp/net/event_loop.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/net/event_loop.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_event_loop_echo.dir/build.make CMakeFiles/test_event_loop_echo.dir/src/cpp/net/event_loop.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_tcp_listener_echo.dir/build.make CMakeFiles/test_tcp_listener_echo.dir/src/cpp/net/event_loop.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/src/cpp/net/event_loop.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http2_native.dir/build.make CMakeFiles/test_http2_native.dir/src/cpp/net/event_loop.cpp.o
.PHONY : src/cpp/net/event_loop.cpp.o

src/cpp/net/event_loop.i: src/cpp/net/event_loop.cpp.i
.PHONY : src/cpp/net/event_loop.i

# target to preprocess a source file
src/cpp/net/event_loop.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/net/event_loop.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_event_loop_echo.dir/build.make CMakeFiles/test_event_loop_echo.dir/src/cpp/net/event_loop.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_tcp_listener_echo.dir/build.make CMakeFiles/test_tcp_listener_echo.dir/src/cpp/net/event_loop.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/src/cpp/net/event_loop.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http2_native.dir/build.make CMakeFiles/test_http2_native.dir/src/cpp/net/event_loop.cpp.i
.PHONY : src/cpp/net/event_loop.cpp.i

src/cpp/net/event_loop.s: src/cpp/net/event_loop.cpp.s
.PHONY : src/cpp/net/event_loop.s

# target to generate assembly for a file
src/cpp/net/event_loop.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/net/event_loop.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_event_loop_echo.dir/build.make CMakeFiles/test_event_loop_echo.dir/src/cpp/net/event_loop.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_tcp_listener_echo.dir/build.make CMakeFiles/test_tcp_listener_echo.dir/src/cpp/net/event_loop.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/src/cpp/net/event_loop.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http2_native.dir/build.make CMakeFiles/test_http2_native.dir/src/cpp/net/event_loop.cpp.s
.PHONY : src/cpp/net/event_loop.cpp.s

src/cpp/net/event_loop_kqueue.o: src/cpp/net/event_loop_kqueue.cpp.o
.PHONY : src/cpp/net/event_loop_kqueue.o

# target to build an object file
src/cpp/net/event_loop_kqueue.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/net/event_loop_kqueue.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_event_loop_echo.dir/build.make CMakeFiles/test_event_loop_echo.dir/src/cpp/net/event_loop_kqueue.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_tcp_listener_echo.dir/build.make CMakeFiles/test_tcp_listener_echo.dir/src/cpp/net/event_loop_kqueue.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/src/cpp/net/event_loop_kqueue.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http2_native.dir/build.make CMakeFiles/test_http2_native.dir/src/cpp/net/event_loop_kqueue.cpp.o
.PHONY : src/cpp/net/event_loop_kqueue.cpp.o

src/cpp/net/event_loop_kqueue.i: src/cpp/net/event_loop_kqueue.cpp.i
.PHONY : src/cpp/net/event_loop_kqueue.i

# target to preprocess a source file
src/cpp/net/event_loop_kqueue.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/net/event_loop_kqueue.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_event_loop_echo.dir/build.make CMakeFiles/test_event_loop_echo.dir/src/cpp/net/event_loop_kqueue.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_tcp_listener_echo.dir/build.make CMakeFiles/test_tcp_listener_echo.dir/src/cpp/net/event_loop_kqueue.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/src/cpp/net/event_loop_kqueue.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http2_native.dir/build.make CMakeFiles/test_http2_native.dir/src/cpp/net/event_loop_kqueue.cpp.i
.PHONY : src/cpp/net/event_loop_kqueue.cpp.i

src/cpp/net/event_loop_kqueue.s: src/cpp/net/event_loop_kqueue.cpp.s
.PHONY : src/cpp/net/event_loop_kqueue.s

# target to generate assembly for a file
src/cpp/net/event_loop_kqueue.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/net/event_loop_kqueue.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_event_loop_echo.dir/build.make CMakeFiles/test_event_loop_echo.dir/src/cpp/net/event_loop_kqueue.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_tcp_listener_echo.dir/build.make CMakeFiles/test_tcp_listener_echo.dir/src/cpp/net/event_loop_kqueue.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/src/cpp/net/event_loop_kqueue.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http2_native.dir/build.make CMakeFiles/test_http2_native.dir/src/cpp/net/event_loop_kqueue.cpp.s
.PHONY : src/cpp/net/event_loop_kqueue.cpp.s

src/cpp/net/tcp_listener.o: src/cpp/net/tcp_listener.cpp.o
.PHONY : src/cpp/net/tcp_listener.o

# target to build an object file
src/cpp/net/tcp_listener.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/net/tcp_listener.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_event_loop_echo.dir/build.make CMakeFiles/test_event_loop_echo.dir/src/cpp/net/tcp_listener.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_tcp_listener_echo.dir/build.make CMakeFiles/test_tcp_listener_echo.dir/src/cpp/net/tcp_listener.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/src/cpp/net/tcp_listener.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http2_native.dir/build.make CMakeFiles/test_http2_native.dir/src/cpp/net/tcp_listener.cpp.o
.PHONY : src/cpp/net/tcp_listener.cpp.o

src/cpp/net/tcp_listener.i: src/cpp/net/tcp_listener.cpp.i
.PHONY : src/cpp/net/tcp_listener.i

# target to preprocess a source file
src/cpp/net/tcp_listener.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/net/tcp_listener.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_event_loop_echo.dir/build.make CMakeFiles/test_event_loop_echo.dir/src/cpp/net/tcp_listener.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_tcp_listener_echo.dir/build.make CMakeFiles/test_tcp_listener_echo.dir/src/cpp/net/tcp_listener.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/src/cpp/net/tcp_listener.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http2_native.dir/build.make CMakeFiles/test_http2_native.dir/src/cpp/net/tcp_listener.cpp.i
.PHONY : src/cpp/net/tcp_listener.cpp.i

src/cpp/net/tcp_listener.s: src/cpp/net/tcp_listener.cpp.s
.PHONY : src/cpp/net/tcp_listener.s

# target to generate assembly for a file
src/cpp/net/tcp_listener.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/net/tcp_listener.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_event_loop_echo.dir/build.make CMakeFiles/test_event_loop_echo.dir/src/cpp/net/tcp_listener.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_tcp_listener_echo.dir/build.make CMakeFiles/test_tcp_listener_echo.dir/src/cpp/net/tcp_listener.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/src/cpp/net/tcp_listener.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http2_native.dir/build.make CMakeFiles/test_http2_native.dir/src/cpp/net/tcp_listener.cpp.s
.PHONY : src/cpp/net/tcp_listener.cpp.s

src/cpp/net/tcp_socket.o: src/cpp/net/tcp_socket.cpp.o
.PHONY : src/cpp/net/tcp_socket.o

# target to build an object file
src/cpp/net/tcp_socket.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/net/tcp_socket.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_event_loop_echo.dir/build.make CMakeFiles/test_event_loop_echo.dir/src/cpp/net/tcp_socket.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_tcp_listener_echo.dir/build.make CMakeFiles/test_tcp_listener_echo.dir/src/cpp/net/tcp_socket.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/src/cpp/net/tcp_socket.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http2_native.dir/build.make CMakeFiles/test_http2_native.dir/src/cpp/net/tcp_socket.cpp.o
.PHONY : src/cpp/net/tcp_socket.cpp.o

src/cpp/net/tcp_socket.i: src/cpp/net/tcp_socket.cpp.i
.PHONY : src/cpp/net/tcp_socket.i

# target to preprocess a source file
src/cpp/net/tcp_socket.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/net/tcp_socket.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_event_loop_echo.dir/build.make CMakeFiles/test_event_loop_echo.dir/src/cpp/net/tcp_socket.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_tcp_listener_echo.dir/build.make CMakeFiles/test_tcp_listener_echo.dir/src/cpp/net/tcp_socket.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/src/cpp/net/tcp_socket.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http2_native.dir/build.make CMakeFiles/test_http2_native.dir/src/cpp/net/tcp_socket.cpp.i
.PHONY : src/cpp/net/tcp_socket.cpp.i

src/cpp/net/tcp_socket.s: src/cpp/net/tcp_socket.cpp.s
.PHONY : src/cpp/net/tcp_socket.s

# target to generate assembly for a file
src/cpp/net/tcp_socket.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/net/tcp_socket.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_event_loop_echo.dir/build.make CMakeFiles/test_event_loop_echo.dir/src/cpp/net/tcp_socket.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_tcp_listener_echo.dir/build.make CMakeFiles/test_tcp_listener_echo.dir/src/cpp/net/tcp_socket.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/src/cpp/net/tcp_socket.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http2_native.dir/build.make CMakeFiles/test_http2_native.dir/src/cpp/net/tcp_socket.cpp.s
.PHONY : src/cpp/net/tcp_socket.cpp.s

src/cpp/pg/pg_connection.o: src/cpp/pg/pg_connection.cpp.o
.PHONY : src/cpp/pg/pg_connection.o

# target to build an object file
src/cpp/pg/pg_connection.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_connection.cpp.o
.PHONY : src/cpp/pg/pg_connection.cpp.o

src/cpp/pg/pg_connection.i: src/cpp/pg/pg_connection.cpp.i
.PHONY : src/cpp/pg/pg_connection.i

# target to preprocess a source file
src/cpp/pg/pg_connection.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_connection.cpp.i
.PHONY : src/cpp/pg/pg_connection.cpp.i

src/cpp/pg/pg_connection.s: src/cpp/pg/pg_connection.cpp.s
.PHONY : src/cpp/pg/pg_connection.s

# target to generate assembly for a file
src/cpp/pg/pg_connection.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_connection.cpp.s
.PHONY : src/cpp/pg/pg_connection.cpp.s

src/cpp/pg/pg_connection_impl.o: src/cpp/pg/pg_connection_impl.cpp.o
.PHONY : src/cpp/pg/pg_connection_impl.o

# target to build an object file
src/cpp/pg/pg_connection_impl.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_connection_impl.cpp.o
.PHONY : src/cpp/pg/pg_connection_impl.cpp.o

src/cpp/pg/pg_connection_impl.i: src/cpp/pg/pg_connection_impl.cpp.i
.PHONY : src/cpp/pg/pg_connection_impl.i

# target to preprocess a source file
src/cpp/pg/pg_connection_impl.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_connection_impl.cpp.i
.PHONY : src/cpp/pg/pg_connection_impl.cpp.i

src/cpp/pg/pg_connection_impl.s: src/cpp/pg/pg_connection_impl.cpp.s
.PHONY : src/cpp/pg/pg_connection_impl.s

# target to generate assembly for a file
src/cpp/pg/pg_connection_impl.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_connection_impl.cpp.s
.PHONY : src/cpp/pg/pg_connection_impl.cpp.s

src/cpp/pg/pg_future.o: src/cpp/pg/pg_future.cpp.o
.PHONY : src/cpp/pg/pg_future.o

# target to build an object file
src/cpp/pg/pg_future.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_future.cpp.o
.PHONY : src/cpp/pg/pg_future.cpp.o

src/cpp/pg/pg_future.i: src/cpp/pg/pg_future.cpp.i
.PHONY : src/cpp/pg/pg_future.i

# target to preprocess a source file
src/cpp/pg/pg_future.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_future.cpp.i
.PHONY : src/cpp/pg/pg_future.cpp.i

src/cpp/pg/pg_future.s: src/cpp/pg/pg_future.cpp.s
.PHONY : src/cpp/pg/pg_future.s

# target to generate assembly for a file
src/cpp/pg/pg_future.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_future.cpp.s
.PHONY : src/cpp/pg/pg_future.cpp.s

src/cpp/pg/pg_lib.o: src/cpp/pg/pg_lib.cpp.o
.PHONY : src/cpp/pg/pg_lib.o

# target to build an object file
src/cpp/pg/pg_lib.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_lib.cpp.o
.PHONY : src/cpp/pg/pg_lib.cpp.o

src/cpp/pg/pg_lib.i: src/cpp/pg/pg_lib.cpp.i
.PHONY : src/cpp/pg/pg_lib.i

# target to preprocess a source file
src/cpp/pg/pg_lib.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_lib.cpp.i
.PHONY : src/cpp/pg/pg_lib.cpp.i

src/cpp/pg/pg_lib.s: src/cpp/pg/pg_lib.cpp.s
.PHONY : src/cpp/pg/pg_lib.s

# target to generate assembly for a file
src/cpp/pg/pg_lib.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_lib.cpp.s
.PHONY : src/cpp/pg/pg_lib.cpp.s

src/cpp/pg/pg_pool.o: src/cpp/pg/pg_pool.cpp.o
.PHONY : src/cpp/pg/pg_pool.o

# target to build an object file
src/cpp/pg/pg_pool.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_pool.cpp.o
.PHONY : src/cpp/pg/pg_pool.cpp.o

src/cpp/pg/pg_pool.i: src/cpp/pg/pg_pool.cpp.i
.PHONY : src/cpp/pg/pg_pool.i

# target to preprocess a source file
src/cpp/pg/pg_pool.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_pool.cpp.i
.PHONY : src/cpp/pg/pg_pool.cpp.i

src/cpp/pg/pg_pool.s: src/cpp/pg/pg_pool.cpp.s
.PHONY : src/cpp/pg/pg_pool.s

# target to generate assembly for a file
src/cpp/pg/pg_pool.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_pool.cpp.s
.PHONY : src/cpp/pg/pg_pool.cpp.s

src/cpp/pg/pg_pool_impl.o: src/cpp/pg/pg_pool_impl.cpp.o
.PHONY : src/cpp/pg/pg_pool_impl.o

# target to build an object file
src/cpp/pg/pg_pool_impl.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_pool_impl.cpp.o
.PHONY : src/cpp/pg/pg_pool_impl.cpp.o

src/cpp/pg/pg_pool_impl.i: src/cpp/pg/pg_pool_impl.cpp.i
.PHONY : src/cpp/pg/pg_pool_impl.i

# target to preprocess a source file
src/cpp/pg/pg_pool_impl.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_pool_impl.cpp.i
.PHONY : src/cpp/pg/pg_pool_impl.cpp.i

src/cpp/pg/pg_pool_impl.s: src/cpp/pg/pg_pool_impl.cpp.s
.PHONY : src/cpp/pg/pg_pool_impl.s

# target to generate assembly for a file
src/cpp/pg/pg_pool_impl.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_pool_impl.cpp.s
.PHONY : src/cpp/pg/pg_pool_impl.cpp.s

src/cpp/pg/pg_result.o: src/cpp/pg/pg_result.cpp.o
.PHONY : src/cpp/pg/pg_result.o

# target to build an object file
src/cpp/pg/pg_result.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_result.cpp.o
.PHONY : src/cpp/pg/pg_result.cpp.o

src/cpp/pg/pg_result.i: src/cpp/pg/pg_result.cpp.i
.PHONY : src/cpp/pg/pg_result.i

# target to preprocess a source file
src/cpp/pg/pg_result.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_result.cpp.i
.PHONY : src/cpp/pg/pg_result.cpp.i

src/cpp/pg/pg_result.s: src/cpp/pg/pg_result.cpp.s
.PHONY : src/cpp/pg/pg_result.s

# target to generate assembly for a file
src/cpp/pg/pg_result.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_pg.dir/build.make CMakeFiles/fasterapi_pg.dir/src/cpp/pg/pg_result.cpp.s
.PHONY : src/cpp/pg/pg_result.cpp.s

src/cpp/python/free_threading.o: src/cpp/python/free_threading.cpp.o
.PHONY : src/cpp/python/free_threading.o

# target to build an object file
src/cpp/python/free_threading.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/python/free_threading.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/python/free_threading.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/python/free_threading.cpp.o
.PHONY : src/cpp/python/free_threading.cpp.o

src/cpp/python/free_threading.i: src/cpp/python/free_threading.cpp.i
.PHONY : src/cpp/python/free_threading.i

# target to preprocess a source file
src/cpp/python/free_threading.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/python/free_threading.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/python/free_threading.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/python/free_threading.cpp.i
.PHONY : src/cpp/python/free_threading.cpp.i

src/cpp/python/free_threading.s: src/cpp/python/free_threading.cpp.s
.PHONY : src/cpp/python/free_threading.s

# target to generate assembly for a file
src/cpp/python/free_threading.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/python/free_threading.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/python/free_threading.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/python/free_threading.cpp.s
.PHONY : src/cpp/python/free_threading.cpp.s

src/cpp/python/gil_guard.o: src/cpp/python/gil_guard.cpp.o
.PHONY : src/cpp/python/gil_guard.o

# target to build an object file
src/cpp/python/gil_guard.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/python/gil_guard.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/python/gil_guard.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/python/gil_guard.cpp.o
.PHONY : src/cpp/python/gil_guard.cpp.o

src/cpp/python/gil_guard.i: src/cpp/python/gil_guard.cpp.i
.PHONY : src/cpp/python/gil_guard.i

# target to preprocess a source file
src/cpp/python/gil_guard.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/python/gil_guard.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/python/gil_guard.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/python/gil_guard.cpp.i
.PHONY : src/cpp/python/gil_guard.cpp.i

src/cpp/python/gil_guard.s: src/cpp/python/gil_guard.cpp.s
.PHONY : src/cpp/python/gil_guard.s

# target to generate assembly for a file
src/cpp/python/gil_guard.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/python/gil_guard.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/python/gil_guard.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/python/gil_guard.cpp.s
.PHONY : src/cpp/python/gil_guard.cpp.s

src/cpp/python/py_executor.o: src/cpp/python/py_executor.cpp.o
.PHONY : src/cpp/python/py_executor.o

# target to build an object file
src/cpp/python/py_executor.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/python/py_executor.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/python/py_executor.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/python/py_executor.cpp.o
.PHONY : src/cpp/python/py_executor.cpp.o

src/cpp/python/py_executor.i: src/cpp/python/py_executor.cpp.i
.PHONY : src/cpp/python/py_executor.i

# target to preprocess a source file
src/cpp/python/py_executor.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/python/py_executor.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/python/py_executor.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/python/py_executor.cpp.i
.PHONY : src/cpp/python/py_executor.cpp.i

src/cpp/python/py_executor.s: src/cpp/python/py_executor.cpp.s
.PHONY : src/cpp/python/py_executor.s

# target to generate assembly for a file
src/cpp/python/py_executor.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/python/py_executor.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/python/py_executor.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/python/py_executor.cpp.s
.PHONY : src/cpp/python/py_executor.cpp.s

src/cpp/python/subinterpreter_pool.o: src/cpp/python/subinterpreter_pool.cpp.o
.PHONY : src/cpp/python/subinterpreter_pool.o

# target to build an object file
src/cpp/python/subinterpreter_pool.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/python/subinterpreter_pool.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/python/subinterpreter_pool.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/python/subinterpreter_pool.cpp.o
.PHONY : src/cpp/python/subinterpreter_pool.cpp.o

src/cpp/python/subinterpreter_pool.i: src/cpp/python/subinterpreter_pool.cpp.i
.PHONY : src/cpp/python/subinterpreter_pool.i

# target to preprocess a source file
src/cpp/python/subinterpreter_pool.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/python/subinterpreter_pool.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/python/subinterpreter_pool.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/python/subinterpreter_pool.cpp.i
.PHONY : src/cpp/python/subinterpreter_pool.cpp.i

src/cpp/python/subinterpreter_pool.s: src/cpp/python/subinterpreter_pool.cpp.s
.PHONY : src/cpp/python/subinterpreter_pool.s

# target to generate assembly for a file
src/cpp/python/subinterpreter_pool.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/python/subinterpreter_pool.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/src/cpp/python/subinterpreter_pool.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_gil_strategies.dir/build.make CMakeFiles/bench_gil_strategies.dir/src/cpp/python/subinterpreter_pool.cpp.s
.PHONY : src/cpp/python/subinterpreter_pool.cpp.s

src/cpp/types/native_request.o: src/cpp/types/native_request.cpp.o
.PHONY : src/cpp/types/native_request.o

# target to build an object file
src/cpp/types/native_request.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/types/native_request.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_native_types.dir/build.make CMakeFiles/test_native_types.dir/src/cpp/types/native_request.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/src/cpp/types/native_request.cpp.o
.PHONY : src/cpp/types/native_request.cpp.o

src/cpp/types/native_request.i: src/cpp/types/native_request.cpp.i
.PHONY : src/cpp/types/native_request.i

# target to preprocess a source file
src/cpp/types/native_request.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/types/native_request.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_native_types.dir/build.make CMakeFiles/test_native_types.dir/src/cpp/types/native_request.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/src/cpp/types/native_request.cpp.i
.PHONY : src/cpp/types/native_request.cpp.i

src/cpp/types/native_request.s: src/cpp/types/native_request.cpp.s
.PHONY : src/cpp/types/native_request.s

# target to generate assembly for a file
src/cpp/types/native_request.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/types/native_request.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_native_types.dir/build.make CMakeFiles/test_native_types.dir/src/cpp/types/native_request.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/src/cpp/types/native_request.cpp.s
.PHONY : src/cpp/types/native_request.cpp.s

src/cpp/types/native_value.o: src/cpp/types/native_value.cpp.o
.PHONY : src/cpp/types/native_value.o

# target to build an object file
src/cpp/types/native_value.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/types/native_value.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_native_types.dir/build.make CMakeFiles/test_native_types.dir/src/cpp/types/native_value.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/src/cpp/types/native_value.cpp.o
.PHONY : src/cpp/types/native_value.cpp.o

src/cpp/types/native_value.i: src/cpp/types/native_value.cpp.i
.PHONY : src/cpp/types/native_value.i

# target to preprocess a source file
src/cpp/types/native_value.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/types/native_value.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_native_types.dir/build.make CMakeFiles/test_native_types.dir/src/cpp/types/native_value.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/src/cpp/types/native_value.cpp.i
.PHONY : src/cpp/types/native_value.cpp.i

src/cpp/types/native_value.s: src/cpp/types/native_value.cpp.s
.PHONY : src/cpp/types/native_value.s

# target to generate assembly for a file
src/cpp/types/native_value.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/types/native_value.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_native_types.dir/build.make CMakeFiles/test_native_types.dir/src/cpp/types/native_value.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/src/cpp/types/native_value.cpp.s
.PHONY : src/cpp/types/native_value.cpp.s

src/cpp/webrtc/data_channel.o: src/cpp/webrtc/data_channel.cpp.o
.PHONY : src/cpp/webrtc/data_channel.o

# target to build an object file
src/cpp/webrtc/data_channel.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/data_channel.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc_media.dir/build.make CMakeFiles/test_webrtc_media.dir/src/cpp/webrtc/data_channel.cpp.o
.PHONY : src/cpp/webrtc/data_channel.cpp.o

src/cpp/webrtc/data_channel.i: src/cpp/webrtc/data_channel.cpp.i
.PHONY : src/cpp/webrtc/data_channel.i

# target to preprocess a source file
src/cpp/webrtc/data_channel.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/data_channel.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc_media.dir/build.make CMakeFiles/test_webrtc_media.dir/src/cpp/webrtc/data_channel.cpp.i
.PHONY : src/cpp/webrtc/data_channel.cpp.i

src/cpp/webrtc/data_channel.s: src/cpp/webrtc/data_channel.cpp.s
.PHONY : src/cpp/webrtc/data_channel.s

# target to generate assembly for a file
src/cpp/webrtc/data_channel.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/data_channel.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc_media.dir/build.make CMakeFiles/test_webrtc_media.dir/src/cpp/webrtc/data_channel.cpp.s
.PHONY : src/cpp/webrtc/data_channel.cpp.s

src/cpp/webrtc/ice.o: src/cpp/webrtc/ice.cpp.o
.PHONY : src/cpp/webrtc/ice.o

# target to build an object file
src/cpp/webrtc/ice.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/ice.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc.dir/build.make CMakeFiles/test_webrtc.dir/src/cpp/webrtc/ice.cpp.o
.PHONY : src/cpp/webrtc/ice.cpp.o

src/cpp/webrtc/ice.i: src/cpp/webrtc/ice.cpp.i
.PHONY : src/cpp/webrtc/ice.i

# target to preprocess a source file
src/cpp/webrtc/ice.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/ice.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc.dir/build.make CMakeFiles/test_webrtc.dir/src/cpp/webrtc/ice.cpp.i
.PHONY : src/cpp/webrtc/ice.cpp.i

src/cpp/webrtc/ice.s: src/cpp/webrtc/ice.cpp.s
.PHONY : src/cpp/webrtc/ice.s

# target to generate assembly for a file
src/cpp/webrtc/ice.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/ice.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc.dir/build.make CMakeFiles/test_webrtc.dir/src/cpp/webrtc/ice.cpp.s
.PHONY : src/cpp/webrtc/ice.cpp.s

src/cpp/webrtc/message_parser.o: src/cpp/webrtc/message_parser.cpp.o
.PHONY : src/cpp/webrtc/message_parser.o

# target to build an object file
src/cpp/webrtc/message_parser.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/message_parser.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc.dir/build.make CMakeFiles/test_webrtc.dir/src/cpp/webrtc/message_parser.cpp.o
.PHONY : src/cpp/webrtc/message_parser.cpp.o

src/cpp/webrtc/message_parser.i: src/cpp/webrtc/message_parser.cpp.i
.PHONY : src/cpp/webrtc/message_parser.i

# target to preprocess a source file
src/cpp/webrtc/message_parser.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/message_parser.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc.dir/build.make CMakeFiles/test_webrtc.dir/src/cpp/webrtc/message_parser.cpp.i
.PHONY : src/cpp/webrtc/message_parser.cpp.i

src/cpp/webrtc/message_parser.s: src/cpp/webrtc/message_parser.cpp.s
.PHONY : src/cpp/webrtc/message_parser.s

# target to generate assembly for a file
src/cpp/webrtc/message_parser.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/message_parser.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc.dir/build.make CMakeFiles/test_webrtc.dir/src/cpp/webrtc/message_parser.cpp.s
.PHONY : src/cpp/webrtc/message_parser.cpp.s

src/cpp/webrtc/rtp.o: src/cpp/webrtc/rtp.cpp.o
.PHONY : src/cpp/webrtc/rtp.o

# target to build an object file
src/cpp/webrtc/rtp.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/rtp.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc_media.dir/build.make CMakeFiles/test_webrtc_media.dir/src/cpp/webrtc/rtp.cpp.o
.PHONY : src/cpp/webrtc/rtp.cpp.o

src/cpp/webrtc/rtp.i: src/cpp/webrtc/rtp.cpp.i
.PHONY : src/cpp/webrtc/rtp.i

# target to preprocess a source file
src/cpp/webrtc/rtp.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/rtp.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc_media.dir/build.make CMakeFiles/test_webrtc_media.dir/src/cpp/webrtc/rtp.cpp.i
.PHONY : src/cpp/webrtc/rtp.cpp.i

src/cpp/webrtc/rtp.s: src/cpp/webrtc/rtp.cpp.s
.PHONY : src/cpp/webrtc/rtp.s

# target to generate assembly for a file
src/cpp/webrtc/rtp.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/rtp.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc_media.dir/build.make CMakeFiles/test_webrtc_media.dir/src/cpp/webrtc/rtp.cpp.s
.PHONY : src/cpp/webrtc/rtp.cpp.s

src/cpp/webrtc/sdp_parser.o: src/cpp/webrtc/sdp_parser.cpp.o
.PHONY : src/cpp/webrtc/sdp_parser.o

# target to build an object file
src/cpp/webrtc/sdp_parser.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/sdp_parser.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc.dir/build.make CMakeFiles/test_webrtc.dir/src/cpp/webrtc/sdp_parser.cpp.o
.PHONY : src/cpp/webrtc/sdp_parser.cpp.o

src/cpp/webrtc/sdp_parser.i: src/cpp/webrtc/sdp_parser.cpp.i
.PHONY : src/cpp/webrtc/sdp_parser.i

# target to preprocess a source file
src/cpp/webrtc/sdp_parser.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/sdp_parser.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc.dir/build.make CMakeFiles/test_webrtc.dir/src/cpp/webrtc/sdp_parser.cpp.i
.PHONY : src/cpp/webrtc/sdp_parser.cpp.i

src/cpp/webrtc/sdp_parser.s: src/cpp/webrtc/sdp_parser.cpp.s
.PHONY : src/cpp/webrtc/sdp_parser.s

# target to generate assembly for a file
src/cpp/webrtc/sdp_parser.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/sdp_parser.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc.dir/build.make CMakeFiles/test_webrtc.dir/src/cpp/webrtc/sdp_parser.cpp.s
.PHONY : src/cpp/webrtc/sdp_parser.cpp.s

src/cpp/webrtc/signaling.o: src/cpp/webrtc/signaling.cpp.o
.PHONY : src/cpp/webrtc/signaling.o

# target to build an object file
src/cpp/webrtc/signaling.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/signaling.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc.dir/build.make CMakeFiles/test_webrtc.dir/src/cpp/webrtc/signaling.cpp.o
.PHONY : src/cpp/webrtc/signaling.cpp.o

src/cpp/webrtc/signaling.i: src/cpp/webrtc/signaling.cpp.i
.PHONY : src/cpp/webrtc/signaling.i

# target to preprocess a source file
src/cpp/webrtc/signaling.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/signaling.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc.dir/build.make CMakeFiles/test_webrtc.dir/src/cpp/webrtc/signaling.cpp.i
.PHONY : src/cpp/webrtc/signaling.cpp.i

src/cpp/webrtc/signaling.s: src/cpp/webrtc/signaling.cpp.s
.PHONY : src/cpp/webrtc/signaling.s

# target to generate assembly for a file
src/cpp/webrtc/signaling.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/fasterapi_http.dir/build.make CMakeFiles/fasterapi_http.dir/src/cpp/webrtc/signaling.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc.dir/build.make CMakeFiles/test_webrtc.dir/src/cpp/webrtc/signaling.cpp.s
.PHONY : src/cpp/webrtc/signaling.cpp.s

techempower/techempower_concurrent.o: techempower/techempower_concurrent.cpp.o
.PHONY : techempower/techempower_concurrent.o

# target to build an object file
techempower/techempower_concurrent.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/techempower/techempower_concurrent.cpp.o
.PHONY : techempower/techempower_concurrent.cpp.o

techempower/techempower_concurrent.i: techempower/techempower_concurrent.cpp.i
.PHONY : techempower/techempower_concurrent.i

# target to preprocess a source file
techempower/techempower_concurrent.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/techempower/techempower_concurrent.cpp.i
.PHONY : techempower/techempower_concurrent.cpp.i

techempower/techempower_concurrent.s: techempower/techempower_concurrent.cpp.s
.PHONY : techempower/techempower_concurrent.s

# target to generate assembly for a file
techempower/techempower_concurrent.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_concurrent.dir/build.make CMakeFiles/bench_techempower_concurrent.dir/techempower/techempower_concurrent.cpp.s
.PHONY : techempower/techempower_concurrent.cpp.s

techempower/techempower_cpp.o: techempower/techempower_cpp.cpp.o
.PHONY : techempower/techempower_cpp.o

# target to build an object file
techempower/techempower_cpp.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/techempower/techempower_cpp.cpp.o
.PHONY : techempower/techempower_cpp.cpp.o

techempower/techempower_cpp.i: techempower/techempower_cpp.cpp.i
.PHONY : techempower/techempower_cpp.i

# target to preprocess a source file
techempower/techempower_cpp.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/techempower/techempower_cpp.cpp.i
.PHONY : techempower/techempower_cpp.cpp.i

techempower/techempower_cpp.s: techempower/techempower_cpp.cpp.s
.PHONY : techempower/techempower_cpp.s

# target to generate assembly for a file
techempower/techempower_cpp.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench_techempower_cpp.dir/build.make CMakeFiles/bench_techempower_cpp.dir/techempower/techempower_cpp.cpp.s
.PHONY : techempower/techempower_cpp.cpp.s

test_cpp_routes.o: test_cpp_routes.cpp.o
.PHONY : test_cpp_routes.o

# target to build an object file
test_cpp_routes.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/test_cpp_routes.cpp.o
.PHONY : test_cpp_routes.cpp.o

test_cpp_routes.i: test_cpp_routes.cpp.i
.PHONY : test_cpp_routes.i

# target to preprocess a source file
test_cpp_routes.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/test_cpp_routes.cpp.i
.PHONY : test_cpp_routes.cpp.i

test_cpp_routes.s: test_cpp_routes.cpp.s
.PHONY : test_cpp_routes.s

# target to generate assembly for a file
test_cpp_routes.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_cpp_routes.dir/build.make CMakeFiles/test_cpp_routes.dir/test_cpp_routes.cpp.s
.PHONY : test_cpp_routes.cpp.s

tests/test_event_loop_echo.o: tests/test_event_loop_echo.cpp.o
.PHONY : tests/test_event_loop_echo.o

# target to build an object file
tests/test_event_loop_echo.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_event_loop_echo.dir/build.make CMakeFiles/test_event_loop_echo.dir/tests/test_event_loop_echo.cpp.o
.PHONY : tests/test_event_loop_echo.cpp.o

tests/test_event_loop_echo.i: tests/test_event_loop_echo.cpp.i
.PHONY : tests/test_event_loop_echo.i

# target to preprocess a source file
tests/test_event_loop_echo.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_event_loop_echo.dir/build.make CMakeFiles/test_event_loop_echo.dir/tests/test_event_loop_echo.cpp.i
.PHONY : tests/test_event_loop_echo.cpp.i

tests/test_event_loop_echo.s: tests/test_event_loop_echo.cpp.s
.PHONY : tests/test_event_loop_echo.s

# target to generate assembly for a file
tests/test_event_loop_echo.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_event_loop_echo.dir/build.make CMakeFiles/test_event_loop_echo.dir/tests/test_event_loop_echo.cpp.s
.PHONY : tests/test_event_loop_echo.cpp.s

tests/test_executor.o: tests/test_executor.cpp.o
.PHONY : tests/test_executor.o

# target to build an object file
tests/test_executor.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/tests/test_executor.cpp.o
.PHONY : tests/test_executor.cpp.o

tests/test_executor.i: tests/test_executor.cpp.i
.PHONY : tests/test_executor.i

# target to preprocess a source file
tests/test_executor.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/tests/test_executor.cpp.i
.PHONY : tests/test_executor.cpp.i

tests/test_executor.s: tests/test_executor.cpp.s
.PHONY : tests/test_executor.s

# target to generate assembly for a file
tests/test_executor.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_executor.dir/build.make CMakeFiles/test_executor.dir/tests/test_executor.cpp.s
.PHONY : tests/test_executor.cpp.s

tests/test_h2_server_push.o: tests/test_h2_server_push.cpp.o
.PHONY : tests/test_h2_server_push.o

# target to build an object file
tests/test_h2_server_push.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_h2_server_push.dir/build.make CMakeFiles/test_h2_server_push.dir/tests/test_h2_server_push.cpp.o
.PHONY : tests/test_h2_server_push.cpp.o

tests/test_h2_server_push.i: tests/test_h2_server_push.cpp.i
.PHONY : tests/test_h2_server_push.i

# target to preprocess a source file
tests/test_h2_server_push.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_h2_server_push.dir/build.make CMakeFiles/test_h2_server_push.dir/tests/test_h2_server_push.cpp.i
.PHONY : tests/test_h2_server_push.cpp.i

tests/test_h2_server_push.s: tests/test_h2_server_push.cpp.s
.PHONY : tests/test_h2_server_push.s

# target to generate assembly for a file
tests/test_h2_server_push.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_h2_server_push.dir/build.make CMakeFiles/test_h2_server_push.dir/tests/test_h2_server_push.cpp.s
.PHONY : tests/test_h2_server_push.cpp.s

tests/test_hpack.o: tests/test_hpack.cpp.o
.PHONY : tests/test_hpack.o

# target to build an object file
tests/test_hpack.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_hpack.dir/build.make CMakeFiles/test_hpack.dir/tests/test_hpack.cpp.o
.PHONY : tests/test_hpack.cpp.o

tests/test_hpack.i: tests/test_hpack.cpp.i
.PHONY : tests/test_hpack.i

# target to preprocess a source file
tests/test_hpack.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_hpack.dir/build.make CMakeFiles/test_hpack.dir/tests/test_hpack.cpp.i
.PHONY : tests/test_hpack.cpp.i

tests/test_hpack.s: tests/test_hpack.cpp.s
.PHONY : tests/test_hpack.s

# target to generate assembly for a file
tests/test_hpack.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_hpack.dir/build.make CMakeFiles/test_hpack.dir/tests/test_hpack.cpp.s
.PHONY : tests/test_hpack.cpp.s

tests/test_http1_native.o: tests/test_http1_native.cpp.o
.PHONY : tests/test_http1_native.o

# target to build an object file
tests/test_http1_native.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/tests/test_http1_native.cpp.o
.PHONY : tests/test_http1_native.cpp.o

tests/test_http1_native.i: tests/test_http1_native.cpp.i
.PHONY : tests/test_http1_native.i

# target to preprocess a source file
tests/test_http1_native.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/tests/test_http1_native.cpp.i
.PHONY : tests/test_http1_native.cpp.i

tests/test_http1_native.s: tests/test_http1_native.cpp.s
.PHONY : tests/test_http1_native.s

# target to generate assembly for a file
tests/test_http1_native.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_native.dir/build.make CMakeFiles/test_http1_native.dir/tests/test_http1_native.cpp.s
.PHONY : tests/test_http1_native.cpp.s

tests/test_http1_parser.o: tests/test_http1_parser.cpp.o
.PHONY : tests/test_http1_parser.o

# target to build an object file
tests/test_http1_parser.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_parser.dir/build.make CMakeFiles/test_http1_parser.dir/tests/test_http1_parser.cpp.o
.PHONY : tests/test_http1_parser.cpp.o

tests/test_http1_parser.i: tests/test_http1_parser.cpp.i
.PHONY : tests/test_http1_parser.i

# target to preprocess a source file
tests/test_http1_parser.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_parser.dir/build.make CMakeFiles/test_http1_parser.dir/tests/test_http1_parser.cpp.i
.PHONY : tests/test_http1_parser.cpp.i

tests/test_http1_parser.s: tests/test_http1_parser.cpp.s
.PHONY : tests/test_http1_parser.s

# target to generate assembly for a file
tests/test_http1_parser.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http1_parser.dir/build.make CMakeFiles/test_http1_parser.dir/tests/test_http1_parser.cpp.s
.PHONY : tests/test_http1_parser.cpp.s

tests/test_http2_native.o: tests/test_http2_native.cpp.o
.PHONY : tests/test_http2_native.o

# target to build an object file
tests/test_http2_native.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http2_native.dir/build.make CMakeFiles/test_http2_native.dir/tests/test_http2_native.cpp.o
.PHONY : tests/test_http2_native.cpp.o

tests/test_http2_native.i: tests/test_http2_native.cpp.i
.PHONY : tests/test_http2_native.i

# target to preprocess a source file
tests/test_http2_native.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http2_native.dir/build.make CMakeFiles/test_http2_native.dir/tests/test_http2_native.cpp.i
.PHONY : tests/test_http2_native.cpp.i

tests/test_http2_native.s: tests/test_http2_native.cpp.s
.PHONY : tests/test_http2_native.s

# target to generate assembly for a file
tests/test_http2_native.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http2_native.dir/build.make CMakeFiles/test_http2_native.dir/tests/test_http2_native.cpp.s
.PHONY : tests/test_http2_native.cpp.s

tests/test_http3_parser.o: tests/test_http3_parser.cpp.o
.PHONY : tests/test_http3_parser.o

# target to build an object file
tests/test_http3_parser.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http3_parser.dir/build.make CMakeFiles/test_http3_parser.dir/tests/test_http3_parser.cpp.o
.PHONY : tests/test_http3_parser.cpp.o

tests/test_http3_parser.i: tests/test_http3_parser.cpp.i
.PHONY : tests/test_http3_parser.i

# target to preprocess a source file
tests/test_http3_parser.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http3_parser.dir/build.make CMakeFiles/test_http3_parser.dir/tests/test_http3_parser.cpp.i
.PHONY : tests/test_http3_parser.cpp.i

tests/test_http3_parser.s: tests/test_http3_parser.cpp.s
.PHONY : tests/test_http3_parser.s

# target to generate assembly for a file
tests/test_http3_parser.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_http3_parser.dir/build.make CMakeFiles/test_http3_parser.dir/tests/test_http3_parser.cpp.s
.PHONY : tests/test_http3_parser.cpp.s

tests/test_lockfree_queue.o: tests/test_lockfree_queue.cpp.o
.PHONY : tests/test_lockfree_queue.o

# target to build an object file
tests/test_lockfree_queue.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_lockfree_queue.dir/build.make CMakeFiles/test_lockfree_queue.dir/tests/test_lockfree_queue.cpp.o
.PHONY : tests/test_lockfree_queue.cpp.o

tests/test_lockfree_queue.i: tests/test_lockfree_queue.cpp.i
.PHONY : tests/test_lockfree_queue.i

# target to preprocess a source file
tests/test_lockfree_queue.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_lockfree_queue.dir/build.make CMakeFiles/test_lockfree_queue.dir/tests/test_lockfree_queue.cpp.i
.PHONY : tests/test_lockfree_queue.cpp.i

tests/test_lockfree_queue.s: tests/test_lockfree_queue.cpp.s
.PHONY : tests/test_lockfree_queue.s

# target to generate assembly for a file
tests/test_lockfree_queue.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_lockfree_queue.dir/build.make CMakeFiles/test_lockfree_queue.dir/tests/test_lockfree_queue.cpp.s
.PHONY : tests/test_lockfree_queue.cpp.s

tests/test_mcp_protocol.o: tests/test_mcp_protocol.cpp.o
.PHONY : tests/test_mcp_protocol.o

# target to build an object file
tests/test_mcp_protocol.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_mcp_protocol.dir/build.make CMakeFiles/test_mcp_protocol.dir/tests/test_mcp_protocol.cpp.o
.PHONY : tests/test_mcp_protocol.cpp.o

tests/test_mcp_protocol.i: tests/test_mcp_protocol.cpp.i
.PHONY : tests/test_mcp_protocol.i

# target to preprocess a source file
tests/test_mcp_protocol.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_mcp_protocol.dir/build.make CMakeFiles/test_mcp_protocol.dir/tests/test_mcp_protocol.cpp.i
.PHONY : tests/test_mcp_protocol.cpp.i

tests/test_mcp_protocol.s: tests/test_mcp_protocol.cpp.s
.PHONY : tests/test_mcp_protocol.s

# target to generate assembly for a file
tests/test_mcp_protocol.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_mcp_protocol.dir/build.make CMakeFiles/test_mcp_protocol.dir/tests/test_mcp_protocol.cpp.s
.PHONY : tests/test_mcp_protocol.cpp.s

tests/test_mcp_transport.o: tests/test_mcp_transport.cpp.o
.PHONY : tests/test_mcp_transport.o

# target to build an object file
tests/test_mcp_transport.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_mcp_transport.dir/build.make CMakeFiles/test_mcp_transport.dir/tests/test_mcp_transport.cpp.o
.PHONY : tests/test_mcp_transport.cpp.o

tests/test_mcp_transport.i: tests/test_mcp_transport.cpp.i
.PHONY : tests/test_mcp_transport.i

# target to preprocess a source file
tests/test_mcp_transport.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_mcp_transport.dir/build.make CMakeFiles/test_mcp_transport.dir/tests/test_mcp_transport.cpp.i
.PHONY : tests/test_mcp_transport.cpp.i

tests/test_mcp_transport.s: tests/test_mcp_transport.cpp.s
.PHONY : tests/test_mcp_transport.s

# target to generate assembly for a file
tests/test_mcp_transport.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_mcp_transport.dir/build.make CMakeFiles/test_mcp_transport.dir/tests/test_mcp_transport.cpp.s
.PHONY : tests/test_mcp_transport.cpp.s

tests/test_native_types.o: tests/test_native_types.cpp.o
.PHONY : tests/test_native_types.o

# target to build an object file
tests/test_native_types.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_native_types.dir/build.make CMakeFiles/test_native_types.dir/tests/test_native_types.cpp.o
.PHONY : tests/test_native_types.cpp.o

tests/test_native_types.i: tests/test_native_types.cpp.i
.PHONY : tests/test_native_types.i

# target to preprocess a source file
tests/test_native_types.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_native_types.dir/build.make CMakeFiles/test_native_types.dir/tests/test_native_types.cpp.i
.PHONY : tests/test_native_types.cpp.i

tests/test_native_types.s: tests/test_native_types.cpp.s
.PHONY : tests/test_native_types.s

# target to generate assembly for a file
tests/test_native_types.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_native_types.dir/build.make CMakeFiles/test_native_types.dir/tests/test_native_types.cpp.s
.PHONY : tests/test_native_types.cpp.s

tests/test_pyobject_pool.o: tests/test_pyobject_pool.cpp.o
.PHONY : tests/test_pyobject_pool.o

# target to build an object file
tests/test_pyobject_pool.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_pyobject_pool.dir/build.make CMakeFiles/test_pyobject_pool.dir/tests/test_pyobject_pool.cpp.o
.PHONY : tests/test_pyobject_pool.cpp.o

tests/test_pyobject_pool.i: tests/test_pyobject_pool.cpp.i
.PHONY : tests/test_pyobject_pool.i

# target to preprocess a source file
tests/test_pyobject_pool.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_pyobject_pool.dir/build.make CMakeFiles/test_pyobject_pool.dir/tests/test_pyobject_pool.cpp.i
.PHONY : tests/test_pyobject_pool.cpp.i

tests/test_pyobject_pool.s: tests/test_pyobject_pool.cpp.s
.PHONY : tests/test_pyobject_pool.s

# target to generate assembly for a file
tests/test_pyobject_pool.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_pyobject_pool.dir/build.make CMakeFiles/test_pyobject_pool.dir/tests/test_pyobject_pool.cpp.s
.PHONY : tests/test_pyobject_pool.cpp.s

tests/test_router.o: tests/test_router.cpp.o
.PHONY : tests/test_router.o

# target to build an object file
tests/test_router.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_router.dir/build.make CMakeFiles/test_router.dir/tests/test_router.cpp.o
.PHONY : tests/test_router.cpp.o

tests/test_router.i: tests/test_router.cpp.i
.PHONY : tests/test_router.i

# target to preprocess a source file
tests/test_router.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_router.dir/build.make CMakeFiles/test_router.dir/tests/test_router.cpp.i
.PHONY : tests/test_router.cpp.i

tests/test_router.s: tests/test_router.cpp.s
.PHONY : tests/test_router.s

# target to generate assembly for a file
tests/test_router.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_router.dir/build.make CMakeFiles/test_router.dir/tests/test_router.cpp.s
.PHONY : tests/test_router.cpp.s

tests/test_tcp_listener_echo.o: tests/test_tcp_listener_echo.cpp.o
.PHONY : tests/test_tcp_listener_echo.o

# target to build an object file
tests/test_tcp_listener_echo.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_tcp_listener_echo.dir/build.make CMakeFiles/test_tcp_listener_echo.dir/tests/test_tcp_listener_echo.cpp.o
.PHONY : tests/test_tcp_listener_echo.cpp.o

tests/test_tcp_listener_echo.i: tests/test_tcp_listener_echo.cpp.i
.PHONY : tests/test_tcp_listener_echo.i

# target to preprocess a source file
tests/test_tcp_listener_echo.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_tcp_listener_echo.dir/build.make CMakeFiles/test_tcp_listener_echo.dir/tests/test_tcp_listener_echo.cpp.i
.PHONY : tests/test_tcp_listener_echo.cpp.i

tests/test_tcp_listener_echo.s: tests/test_tcp_listener_echo.cpp.s
.PHONY : tests/test_tcp_listener_echo.s

# target to generate assembly for a file
tests/test_tcp_listener_echo.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_tcp_listener_echo.dir/build.make CMakeFiles/test_tcp_listener_echo.dir/tests/test_tcp_listener_echo.cpp.s
.PHONY : tests/test_tcp_listener_echo.cpp.s

tests/test_webrtc.o: tests/test_webrtc.cpp.o
.PHONY : tests/test_webrtc.o

# target to build an object file
tests/test_webrtc.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc.dir/build.make CMakeFiles/test_webrtc.dir/tests/test_webrtc.cpp.o
.PHONY : tests/test_webrtc.cpp.o

tests/test_webrtc.i: tests/test_webrtc.cpp.i
.PHONY : tests/test_webrtc.i

# target to preprocess a source file
tests/test_webrtc.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc.dir/build.make CMakeFiles/test_webrtc.dir/tests/test_webrtc.cpp.i
.PHONY : tests/test_webrtc.cpp.i

tests/test_webrtc.s: tests/test_webrtc.cpp.s
.PHONY : tests/test_webrtc.s

# target to generate assembly for a file
tests/test_webrtc.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc.dir/build.make CMakeFiles/test_webrtc.dir/tests/test_webrtc.cpp.s
.PHONY : tests/test_webrtc.cpp.s

tests/test_webrtc_media.o: tests/test_webrtc_media.cpp.o
.PHONY : tests/test_webrtc_media.o

# target to build an object file
tests/test_webrtc_media.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc_media.dir/build.make CMakeFiles/test_webrtc_media.dir/tests/test_webrtc_media.cpp.o
.PHONY : tests/test_webrtc_media.cpp.o

tests/test_webrtc_media.i: tests/test_webrtc_media.cpp.i
.PHONY : tests/test_webrtc_media.i

# target to preprocess a source file
tests/test_webrtc_media.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc_media.dir/build.make CMakeFiles/test_webrtc_media.dir/tests/test_webrtc_media.cpp.i
.PHONY : tests/test_webrtc_media.cpp.i

tests/test_webrtc_media.s: tests/test_webrtc_media.cpp.s
.PHONY : tests/test_webrtc_media.s

# target to generate assembly for a file
tests/test_webrtc_media.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_webrtc_media.dir/build.make CMakeFiles/test_webrtc_media.dir/tests/test_webrtc_media.cpp.s
.PHONY : tests/test_webrtc_media.cpp.s

tests/test_zerocopy_response.o: tests/test_zerocopy_response.cpp.o
.PHONY : tests/test_zerocopy_response.o

# target to build an object file
tests/test_zerocopy_response.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_zerocopy_response.dir/build.make CMakeFiles/test_zerocopy_response.dir/tests/test_zerocopy_response.cpp.o
.PHONY : tests/test_zerocopy_response.cpp.o

tests/test_zerocopy_response.i: tests/test_zerocopy_response.cpp.i
.PHONY : tests/test_zerocopy_response.i

# target to preprocess a source file
tests/test_zerocopy_response.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_zerocopy_response.dir/build.make CMakeFiles/test_zerocopy_response.dir/tests/test_zerocopy_response.cpp.i
.PHONY : tests/test_zerocopy_response.cpp.i

tests/test_zerocopy_response.s: tests/test_zerocopy_response.cpp.s
.PHONY : tests/test_zerocopy_response.s

# target to generate assembly for a file
tests/test_zerocopy_response.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_zerocopy_response.dir/build.make CMakeFiles/test_zerocopy_response.dir/tests/test_zerocopy_response.cpp.s
.PHONY : tests/test_zerocopy_response.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... Continuous"
	@echo "... ContinuousBuild"
	@echo "... ContinuousConfigure"
	@echo "... ContinuousCoverage"
	@echo "... ContinuousMemCheck"
	@echo "... ContinuousStart"
	@echo "... ContinuousSubmit"
	@echo "... ContinuousTest"
	@echo "... ContinuousUpdate"
	@echo "... Experimental"
	@echo "... ExperimentalBuild"
	@echo "... ExperimentalConfigure"
	@echo "... ExperimentalCoverage"
	@echo "... ExperimentalMemCheck"
	@echo "... ExperimentalStart"
	@echo "... ExperimentalSubmit"
	@echo "... ExperimentalTest"
	@echo "... ExperimentalUpdate"
	@echo "... Nightly"
	@echo "... NightlyBuild"
	@echo "... NightlyConfigure"
	@echo "... NightlyCoverage"
	@echo "... NightlyMemCheck"
	@echo "... NightlyMemoryCheck"
	@echo "... NightlyStart"
	@echo "... NightlySubmit"
	@echo "... NightlyTest"
	@echo "... NightlyUpdate"
	@echo "... changes"
	@echo "... check"
	@echo "... devhelp"
	@echo "... dirhtml"
	@echo "... doctest"
	@echo "... epub"
	@echo "... html"
	@echo "... htmlhelp"
	@echo "... json"
	@echo "... latex"
	@echo "... latexpdf"
	@echo "... linkcheck"
	@echo "... man"
	@echo "... mimalloc-obj-target"
	@echo "... pickle"
	@echo "... qthelp"
	@echo "... singlehtml"
	@echo "... text"
	@echo "... 1mrc_async_server"
	@echo "... 1mrc_coroio_server"
	@echo "... 1mrc_cpp_server"
	@echo "... 1mrc_libuv_server"
	@echo "... behavior_actors"
	@echo "... bench"
	@echo "... bench_actors"
	@echo "... bench_gil_strategies"
	@echo "... bench_hpack"
	@echo "... bench_http1_parser"
	@echo "... bench_pure_cpp"
	@echo "... bench_queue_performance"
	@echo "... bench_router"
	@echo "... bench_techempower_concurrent"
	@echo "... bench_techempower_cpp"
	@echo "... coroio"
	@echo "... coroio_actors"
	@echo "... coroio_dns"
	@echo "... cpp_app_demo"
	@echo "... echoclient"
	@echo "... echoserver"
	@echo "... echotest"
	@echo "... fasterapi_http"
	@echo "... fasterapi_mcp"
	@echo "... fasterapi_pg"
	@echo "... hello_world"
	@echo "... mimalloc"
	@echo "... mimalloc-obj"
	@echo "... mimalloc-static"
	@echo "... nghttp2"
	@echo "... ping_actors"
	@echo "... resolver"
	@echo "... simdjson"
	@echo "... sslechoclient"
	@echo "... sslechoserver"
	@echo "... test_cpp_routes"
	@echo "... test_event_loop_echo"
	@echo "... test_executor"
	@echo "... test_h2_server_push"
	@echo "... test_hpack"
	@echo "... test_http1_native"
	@echo "... test_http1_parser"
	@echo "... test_http2_native"
	@echo "... test_http3_parser"
	@echo "... test_lockfree_queue"
	@echo "... test_mcp_protocol"
	@echo "... test_mcp_transport"
	@echo "... test_native_types"
	@echo "... test_pyobject_pool"
	@echo "... test_router"
	@echo "... test_tcp_listener_echo"
	@echo "... test_webrtc"
	@echo "... test_webrtc_media"
	@echo "... test_zerocopy_response"
	@echo "... timers"
	@echo "... uv"
	@echo "... uv_a"
	@echo "... wsclient"
	@echo "... 1mrc/cpp/1mrc_async_server.o"
	@echo "... 1mrc/cpp/1mrc_async_server.i"
	@echo "... 1mrc/cpp/1mrc_async_server.s"
	@echo "... 1mrc/cpp/1mrc_coroio_server.o"
	@echo "... 1mrc/cpp/1mrc_coroio_server.i"
	@echo "... 1mrc/cpp/1mrc_coroio_server.s"
	@echo "... 1mrc/cpp/1mrc_cpp_server.o"
	@echo "... 1mrc/cpp/1mrc_cpp_server.i"
	@echo "... 1mrc/cpp/1mrc_cpp_server.s"
	@echo "... 1mrc/cpp/1mrc_libuv_server.o"
	@echo "... 1mrc/cpp/1mrc_libuv_server.i"
	@echo "... 1mrc/cpp/1mrc_libuv_server.s"
	@echo "... examples/cpp_app_demo.o"
	@echo "... examples/cpp_app_demo.i"
	@echo "... examples/cpp_app_demo.s"
	@echo "... examples/hello_world.o"
	@echo "... examples/hello_world.i"
	@echo "... examples/hello_world.s"
	@echo "... fasterapi/bench_hpack.o"
	@echo "... fasterapi/bench_hpack.i"
	@echo "... fasterapi/bench_hpack.s"
	@echo "... fasterapi/bench_http1_parser.o"
	@echo "... fasterapi/bench_http1_parser.i"
	@echo "... fasterapi/bench_http1_parser.s"
	@echo "... fasterapi/bench_pure_cpp.o"
	@echo "... fasterapi/bench_pure_cpp.i"
	@echo "... fasterapi/bench_pure_cpp.s"
	@echo "... fasterapi/bench_router.o"
	@echo "... fasterapi/bench_router.i"
	@echo "... fasterapi/bench_router.s"
	@echo "... python_interop/bench_gil_strategies.o"
	@echo "... python_interop/bench_gil_strategies.i"
	@echo "... python_interop/bench_gil_strategies.s"
	@echo "... python_interop/bench_queue_performance.o"
	@echo "... python_interop/bench_queue_performance.i"
	@echo "... python_interop/bench_queue_performance.s"
	@echo "... src/cpp/core/async_io.o"
	@echo "... src/cpp/core/async_io.i"
	@echo "... src/cpp/core/async_io.s"
	@echo "... src/cpp/core/async_io_kqueue.o"
	@echo "... src/cpp/core/async_io_kqueue.i"
	@echo "... src/cpp/core/async_io_kqueue.s"
	@echo "... src/cpp/core/reactor.o"
	@echo "... src/cpp/core/reactor.i"
	@echo "... src/cpp/core/reactor.s"
	@echo "... src/cpp/core/ring_buffer.o"
	@echo "... src/cpp/core/ring_buffer.i"
	@echo "... src/cpp/core/ring_buffer.s"
	@echo "... src/cpp/http/event_loop_pool.o"
	@echo "... src/cpp/http/event_loop_pool.i"
	@echo "... src/cpp/http/event_loop_pool.s"
	@echo "... src/cpp/http/h2_handler.o"
	@echo "... src/cpp/http/h2_handler.i"
	@echo "... src/cpp/http/h2_handler.s"
	@echo "... src/cpp/http/h2_server_push.o"
	@echo "... src/cpp/http/h2_server_push.i"
	@echo "... src/cpp/http/h2_server_push.s"
	@echo "... src/cpp/http/health_monitor.o"
	@echo "... src/cpp/http/health_monitor.i"
	@echo "... src/cpp/http/health_monitor.s"
	@echo "... src/cpp/http/hpack.o"
	@echo "... src/cpp/http/hpack.i"
	@echo "... src/cpp/http/hpack.s"
	@echo "... src/cpp/http/http1_coroio_handler.o"
	@echo "... src/cpp/http/http1_coroio_handler.i"
	@echo "... src/cpp/http/http1_coroio_handler.s"
	@echo "... src/cpp/http/http1_parser.o"
	@echo "... src/cpp/http/http1_parser.i"
	@echo "... src/cpp/http/http1_parser.s"
	@echo "... src/cpp/http/http3_parser.o"
	@echo "... src/cpp/http/http3_parser.i"
	@echo "... src/cpp/http/http3_parser.s"
	@echo "... src/cpp/http/http_lib.o"
	@echo "... src/cpp/http/http_lib.i"
	@echo "... src/cpp/http/http_lib.s"
	@echo "... src/cpp/http/http_parser.o"
	@echo "... src/cpp/http/http_parser.i"
	@echo "... src/cpp/http/http_parser.s"
	@echo "... src/cpp/http/huffman.o"
	@echo "... src/cpp/http/huffman.i"
	@echo "... src/cpp/http/huffman.s"
	@echo "... src/cpp/http/json_parser.o"
	@echo "... src/cpp/http/json_parser.i"
	@echo "... src/cpp/http/json_parser.s"
	@echo "... src/cpp/http/middleware.o"
	@echo "... src/cpp/http/middleware.i"
	@echo "... src/cpp/http/middleware.s"
	@echo "... src/cpp/http/python_callback_bridge.o"
	@echo "... src/cpp/http/python_callback_bridge.i"
	@echo "... src/cpp/http/python_callback_bridge.s"
	@echo "... src/cpp/http/request.o"
	@echo "... src/cpp/http/request.i"
	@echo "... src/cpp/http/request.s"
	@echo "... src/cpp/http/response.o"
	@echo "... src/cpp/http/response.i"
	@echo "... src/cpp/http/response.s"
	@echo "... src/cpp/http/router.o"
	@echo "... src/cpp/http/router.i"
	@echo "... src/cpp/http/router.s"
	@echo "... src/cpp/http/server.o"
	@echo "... src/cpp/http/server.i"
	@echo "... src/cpp/http/server.s"
	@echo "... src/cpp/http/sse.o"
	@echo "... src/cpp/http/sse.i"
	@echo "... src/cpp/http/sse.s"
	@echo "... src/cpp/http/sse_lib.o"
	@echo "... src/cpp/http/sse_lib.i"
	@echo "... src/cpp/http/sse_lib.s"
	@echo "... src/cpp/http/websocket.o"
	@echo "... src/cpp/http/websocket.i"
	@echo "... src/cpp/http/websocket.s"
	@echo "... src/cpp/http/websocket_lib.o"
	@echo "... src/cpp/http/websocket_lib.i"
	@echo "... src/cpp/http/websocket_lib.s"
	@echo "... src/cpp/http/websocket_parser.o"
	@echo "... src/cpp/http/websocket_parser.i"
	@echo "... src/cpp/http/websocket_parser.s"
	@echo "... src/cpp/mcp/mcp_lib.o"
	@echo "... src/cpp/mcp/mcp_lib.i"
	@echo "... src/cpp/mcp/mcp_lib.s"
	@echo "... src/cpp/mcp/protocol/message.o"
	@echo "... src/cpp/mcp/protocol/message.i"
	@echo "... src/cpp/mcp/protocol/message.s"
	@echo "... src/cpp/mcp/protocol/session.o"
	@echo "... src/cpp/mcp/protocol/session.i"
	@echo "... src/cpp/mcp/protocol/session.s"
	@echo "... src/cpp/mcp/proxy/proxy_core.o"
	@echo "... src/cpp/mcp/proxy/proxy_core.i"
	@echo "... src/cpp/mcp/proxy/proxy_core.s"
	@echo "... src/cpp/mcp/proxy/upstream_connection.o"
	@echo "... src/cpp/mcp/proxy/upstream_connection.i"
	@echo "... src/cpp/mcp/proxy/upstream_connection.s"
	@echo "... src/cpp/mcp/security/auth.o"
	@echo "... src/cpp/mcp/security/auth.i"
	@echo "... src/cpp/mcp/security/auth.s"
	@echo "... src/cpp/mcp/security/rate_limit.o"
	@echo "... src/cpp/mcp/security/rate_limit.i"
	@echo "... src/cpp/mcp/security/rate_limit.s"
	@echo "... src/cpp/mcp/security/sandbox.o"
	@echo "... src/cpp/mcp/security/sandbox.i"
	@echo "... src/cpp/mcp/security/sandbox.s"
	@echo "... src/cpp/mcp/server/mcp_server.o"
	@echo "... src/cpp/mcp/server/mcp_server.i"
	@echo "... src/cpp/mcp/server/mcp_server.s"
	@echo "... src/cpp/mcp/transports/stdio_transport.o"
	@echo "... src/cpp/mcp/transports/stdio_transport.i"
	@echo "... src/cpp/mcp/transports/stdio_transport.s"
	@echo "... src/cpp/net/event_loop.o"
	@echo "... src/cpp/net/event_loop.i"
	@echo "... src/cpp/net/event_loop.s"
	@echo "... src/cpp/net/event_loop_kqueue.o"
	@echo "... src/cpp/net/event_loop_kqueue.i"
	@echo "... src/cpp/net/event_loop_kqueue.s"
	@echo "... src/cpp/net/tcp_listener.o"
	@echo "... src/cpp/net/tcp_listener.i"
	@echo "... src/cpp/net/tcp_listener.s"
	@echo "... src/cpp/net/tcp_socket.o"
	@echo "... src/cpp/net/tcp_socket.i"
	@echo "... src/cpp/net/tcp_socket.s"
	@echo "... src/cpp/pg/pg_connection.o"
	@echo "... src/cpp/pg/pg_connection.i"
	@echo "... src/cpp/pg/pg_connection.s"
	@echo "... src/cpp/pg/pg_connection_impl.o"
	@echo "... src/cpp/pg/pg_connection_impl.i"
	@echo "... src/cpp/pg/pg_connection_impl.s"
	@echo "... src/cpp/pg/pg_future.o"
	@echo "... src/cpp/pg/pg_future.i"
	@echo "... src/cpp/pg/pg_future.s"
	@echo "... src/cpp/pg/pg_lib.o"
	@echo "... src/cpp/pg/pg_lib.i"
	@echo "... src/cpp/pg/pg_lib.s"
	@echo "... src/cpp/pg/pg_pool.o"
	@echo "... src/cpp/pg/pg_pool.i"
	@echo "... src/cpp/pg/pg_pool.s"
	@echo "... src/cpp/pg/pg_pool_impl.o"
	@echo "... src/cpp/pg/pg_pool_impl.i"
	@echo "... src/cpp/pg/pg_pool_impl.s"
	@echo "... src/cpp/pg/pg_result.o"
	@echo "... src/cpp/pg/pg_result.i"
	@echo "... src/cpp/pg/pg_result.s"
	@echo "... src/cpp/python/free_threading.o"
	@echo "... src/cpp/python/free_threading.i"
	@echo "... src/cpp/python/free_threading.s"
	@echo "... src/cpp/python/gil_guard.o"
	@echo "... src/cpp/python/gil_guard.i"
	@echo "... src/cpp/python/gil_guard.s"
	@echo "... src/cpp/python/py_executor.o"
	@echo "... src/cpp/python/py_executor.i"
	@echo "... src/cpp/python/py_executor.s"
	@echo "... src/cpp/python/subinterpreter_pool.o"
	@echo "... src/cpp/python/subinterpreter_pool.i"
	@echo "... src/cpp/python/subinterpreter_pool.s"
	@echo "... src/cpp/types/native_request.o"
	@echo "... src/cpp/types/native_request.i"
	@echo "... src/cpp/types/native_request.s"
	@echo "... src/cpp/types/native_value.o"
	@echo "... src/cpp/types/native_value.i"
	@echo "... src/cpp/types/native_value.s"
	@echo "... src/cpp/webrtc/data_channel.o"
	@echo "... src/cpp/webrtc/data_channel.i"
	@echo "... src/cpp/webrtc/data_channel.s"
	@echo "... src/cpp/webrtc/ice.o"
	@echo "... src/cpp/webrtc/ice.i"
	@echo "... src/cpp/webrtc/ice.s"
	@echo "... src/cpp/webrtc/message_parser.o"
	@echo "... src/cpp/webrtc/message_parser.i"
	@echo "... src/cpp/webrtc/message_parser.s"
	@echo "... src/cpp/webrtc/rtp.o"
	@echo "... src/cpp/webrtc/rtp.i"
	@echo "... src/cpp/webrtc/rtp.s"
	@echo "... src/cpp/webrtc/sdp_parser.o"
	@echo "... src/cpp/webrtc/sdp_parser.i"
	@echo "... src/cpp/webrtc/sdp_parser.s"
	@echo "... src/cpp/webrtc/signaling.o"
	@echo "... src/cpp/webrtc/signaling.i"
	@echo "... src/cpp/webrtc/signaling.s"
	@echo "... techempower/techempower_concurrent.o"
	@echo "... techempower/techempower_concurrent.i"
	@echo "... techempower/techempower_concurrent.s"
	@echo "... techempower/techempower_cpp.o"
	@echo "... techempower/techempower_cpp.i"
	@echo "... techempower/techempower_cpp.s"
	@echo "... test_cpp_routes.o"
	@echo "... test_cpp_routes.i"
	@echo "... test_cpp_routes.s"
	@echo "... tests/test_event_loop_echo.o"
	@echo "... tests/test_event_loop_echo.i"
	@echo "... tests/test_event_loop_echo.s"
	@echo "... tests/test_executor.o"
	@echo "... tests/test_executor.i"
	@echo "... tests/test_executor.s"
	@echo "... tests/test_h2_server_push.o"
	@echo "... tests/test_h2_server_push.i"
	@echo "... tests/test_h2_server_push.s"
	@echo "... tests/test_hpack.o"
	@echo "... tests/test_hpack.i"
	@echo "... tests/test_hpack.s"
	@echo "... tests/test_http1_native.o"
	@echo "... tests/test_http1_native.i"
	@echo "... tests/test_http1_native.s"
	@echo "... tests/test_http1_parser.o"
	@echo "... tests/test_http1_parser.i"
	@echo "... tests/test_http1_parser.s"
	@echo "... tests/test_http2_native.o"
	@echo "... tests/test_http2_native.i"
	@echo "... tests/test_http2_native.s"
	@echo "... tests/test_http3_parser.o"
	@echo "... tests/test_http3_parser.i"
	@echo "... tests/test_http3_parser.s"
	@echo "... tests/test_lockfree_queue.o"
	@echo "... tests/test_lockfree_queue.i"
	@echo "... tests/test_lockfree_queue.s"
	@echo "... tests/test_mcp_protocol.o"
	@echo "... tests/test_mcp_protocol.i"
	@echo "... tests/test_mcp_protocol.s"
	@echo "... tests/test_mcp_transport.o"
	@echo "... tests/test_mcp_transport.i"
	@echo "... tests/test_mcp_transport.s"
	@echo "... tests/test_native_types.o"
	@echo "... tests/test_native_types.i"
	@echo "... tests/test_native_types.s"
	@echo "... tests/test_pyobject_pool.o"
	@echo "... tests/test_pyobject_pool.i"
	@echo "... tests/test_pyobject_pool.s"
	@echo "... tests/test_router.o"
	@echo "... tests/test_router.i"
	@echo "... tests/test_router.s"
	@echo "... tests/test_tcp_listener_echo.o"
	@echo "... tests/test_tcp_listener_echo.i"
	@echo "... tests/test_tcp_listener_echo.s"
	@echo "... tests/test_webrtc.o"
	@echo "... tests/test_webrtc.i"
	@echo "... tests/test_webrtc.s"
	@echo "... tests/test_webrtc_media.o"
	@echo "... tests/test_webrtc_media.i"
	@echo "... tests/test_webrtc_media.s"
	@echo "... tests/test_zerocopy_response.o"
	@echo "... tests/test_zerocopy_response.i"
	@echo "... tests/test_zerocopy_response.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

